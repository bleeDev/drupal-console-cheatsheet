{
    "commands": {
        "misc": [
            {
                "name": "about",
                "description": "Exibir informa\u00e7\u00f5es b\u00e1sicas sobre projeto Drupal Console",
                "options": [],
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "about",
                "dashed": "about",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "chain",
                "description": "Execu\u00e7\u00e3o de comandos em sequ\u00eancia",
                "options": {
                    "file": {
                        "name": "file",
                        "description": "Arquivo definido pelo usu\u00e1rio contendo comandos para ser executados em sequ\u00eancia"
                    },
                    "placeholder": {
                        "name": "placeholder",
                        "description": "commands.chain.options.placeholder"
                    },
                    "help": {
                        "name": "help",
                        "description": "Display this help message"
                    },
                    "quiet": {
                        "name": "quiet",
                        "description": "Do not output any message"
                    },
                    "verbose": {
                        "name": "verbose",
                        "description": "Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug"
                    },
                    "version": {
                        "name": "version",
                        "description": "Display this application version"
                    },
                    "ansi": {
                        "name": "ansi",
                        "description": "Force ANSI output"
                    },
                    "no-ansi": {
                        "name": "no-ansi",
                        "description": "Disable ANSI output"
                    },
                    "no-interaction": {
                        "name": "no-interaction",
                        "description": "Do not ask any interactive question"
                    },
                    "env": {
                        "name": "env",
                        "description": "Nombre del ambiente."
                    },
                    "root": {
                        "name": "root",
                        "description": "Define la ra\u00edz de Drupal que se utilizar\u00e1 en la ejecuci\u00f3n de los comandos"
                    },
                    "debug": {
                        "name": "debug",
                        "description": "application.options.debug"
                    },
                    "learning": {
                        "name": "learning",
                        "description": "Generar c\u00f3digo con explicaciones."
                    },
                    "generate-chain": {
                        "name": "generate-chain",
                        "description": "Imprimir opciones y argumentos como YAML para ser usado el comando chain"
                    },
                    "generate-inline": {
                        "name": "generate-inline",
                        "description": "Imprimir opciones y argumentos de ejecuci\u00f3n como llamada inline para ser usados en el futuro"
                    },
                    "generate-doc": {
                        "name": "generate-doc",
                        "description": "Muestra las opciones del comando y sus argumentos como markdown"
                    },
                    "target": {
                        "name": "target",
                        "description": "Nombre del sitio con el que desea interactuar (sitio remoto o local)"
                    },
                    "uri": {
                        "name": "uri",
                        "description": "URI del sitio en Drupal que se usar\u00e1 (para ambientes en multi-site o cuando esta usando un puerto alternativo)"
                    },
                    "yes": {
                        "name": "yes",
                        "description": "Saltar confirmaci\u00f3n y ejecutar directamente"
                    }
                },
                "arguments": {
                    "command": {
                        "name": "command",
                        "description": "The command to execute"
                    }
                },
                "examples": [
                    {
                        "description": "Providing a file option using full path.",
                        "execution": "drupal chain \\\n  --file=\"\/path\/to\/file\/chain-file.yml\"\n"
                    }
                ],
                "aliases": [],
                "key": "chain",
                "dashed": "chain",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "check",
                "description": "Verificador de requisitos do sistema",
                "options": [],
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "check",
                "dashed": "check",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "exec",
                "description": "Execute an external command.",
                "options": {
                    "working-directory": {
                        "name": "working-directory",
                        "description": "The current working directory."
                    }
                },
                "arguments": {
                    "bin": {
                        "name": "bin",
                        "description": "Executable name."
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "exec",
                "dashed": "exec",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "help",
                "description": "Displays help for a command",
                "options": {
                    "xml": {
                        "name": "xml",
                        "description": "To output list as XML"
                    },
                    "raw": {
                        "name": "raw",
                        "description": "To output raw command list"
                    },
                    "format": {
                        "name": "format",
                        "description": "The output format (txt, xml, json, or md)"
                    }
                },
                "arguments": {
                    "command_name": {
                        "name": "command_name",
                        "description": "The command name"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "help",
                "dashed": "help",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "init",
                "description": "Copy configuration files to user home directory.",
                "options": {
                    "destination": {
                        "name": "destination",
                        "description": "Destination directory to copy files"
                    },
                    "override": {
                        "name": "override",
                        "description": "Override configurations files"
                    },
                    "autocomplete": {
                        "name": "autocomplete",
                        "description": "Autocomplete tool files flag."
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "init",
                "dashed": "init",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "list",
                "description": "Lists commands22",
                "options": {
                    "xml": {
                        "name": "xml",
                        "description": "To output list as XML"
                    },
                    "raw": {
                        "name": "raw",
                        "description": "To output raw command list"
                    },
                    "format": {
                        "name": "format",
                        "description": "The output format (txt, xml, json, or md)"
                    }
                },
                "arguments": {
                    "namespace": {
                        "name": "namespace",
                        "description": "The namespace name"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "list",
                "dashed": "list",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "shell",
                "description": "Open a shell providing an interactive REPL (Read\u2013Eval\u2013Print-Loop).",
                "options": [],
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "shell",
                "dashed": "shell",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "server",
                "description": "Executar o servidor PHP atual",
                "options": [],
                "arguments": {
                    "address": {
                        "name": "address",
                        "description": "Valores de endere\u00e7o:porta"
                    }
                },
                "examples": [
                    {
                        "description": "Executar com o endere\u00e7o padr\u00e3o 127.0.0.1:8088",
                        "execution": "drupal server"
                    },
                    {
                        "description": "Executar passando um endere\u00e7o e porta diferentes",
                        "execution": "drupal server 127.0.0.1:8089"
                    },
                    {
                        "description": "Executar com os argumentos padr\u00f5es, por\u00e9m usando a op\u00e7\u00e3o --root para definir o diret\u00f3rio ra\u00edz do site",
                        "execution": "drupal --root=\/var\/www\/drupal8.dev server"
                    }
                ],
                "aliases": [],
                "key": "server",
                "dashed": "server",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "cache": [
            {
                "name": "cache:rebuild",
                "description": "Reconstruir e limpar todos os caches do site.",
                "options": [],
                "arguments": {
                    "cache": {
                        "name": "cache",
                        "description": "Apenas limpar um cache espec\u00edfico."
                    }
                },
                "examples": [
                    {
                        "description": "Reconstruir todos os caches",
                        "execution": "drupal cr all"
                    },
                    {
                        "description": "Reconstruir cache de discovery",
                        "execution": "drupal cr discovery"
                    }
                ],
                "aliases": [
                    "cr"
                ],
                "key": "cache.rebuild",
                "dashed": "cache-rebuild",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "config": [
            {
                "name": "config:delete",
                "description": "Remove Configura\u00e7\u00e3o",
                "options": [],
                "arguments": {
                    "type": {
                        "name": "type",
                        "description": "Configuration type."
                    },
                    "name": {
                        "name": "name",
                        "description": "Nome de configura\u00e7\u00e3o."
                    }
                },
                "examples": [
                    {
                        "description": "Provide a config type and a config name",
                        "execution": "drupal config:delete active all"
                    }
                ],
                "aliases": [
                    "cd"
                ],
                "key": "config.delete",
                "dashed": "config-delete",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "config:diff",
                "description": "Ouput configuration items that are different in active configuration compared with a directory.",
                "options": {
                    "reverse": {
                        "name": "reverse",
                        "description": "See the changes in reverse (i.e diff a directory to the active configuration)."
                    }
                },
                "arguments": {
                    "directory": {
                        "name": "directory",
                        "description": "The directory to diff against. If omitted, choose from Drupal config directories."
                    }
                },
                "examples": [
                    {
                        "description": "Provide a config directory",
                        "execution": "drupal config:diff ..\/config\/path"
                    }
                ],
                "aliases": [
                    "cdi"
                ],
                "key": "config.diff",
                "dashed": "config-diff",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "config:edit",
                "description": "Edite a configura\u00e7\u00e3o selecionada.",
                "options": [],
                "arguments": {
                    "config-name": {
                        "name": "config-name",
                        "description": "Nome da configura\u00e7\u00e3o."
                    },
                    "editor": {
                        "name": "editor",
                        "description": "Editor."
                    }
                },
                "examples": [
                    {
                        "description": "Edit system cron configurations with \"vim\" (default editor).",
                        "execution": "drupal config:edit system.cron"
                    },
                    {
                        "description": "Edit system cron configurations with \"gedit\".",
                        "execution": "drupal config:edit system.cron gedit"
                    }
                ],
                "aliases": [
                    "ced",
                    "cdit"
                ],
                "key": "config.edit",
                "dashed": "config-edit",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "config:export",
                "description": "Exportar a configura\u00e7\u00e3o atual da aplica\u00e7\u00e3o.",
                "options": {
                    "directory": {
                        "name": "directory",
                        "description": "Define the export directory to save the configuration output."
                    },
                    "tar": {
                        "name": "tar",
                        "description": "If set, the configuration will be exported to an archive file."
                    },
                    "remove-uuid": {
                        "name": "remove-uuid",
                        "description": "If set, the configuration will be exported without uuid key."
                    },
                    "remove-config-hash": {
                        "name": "remove-config-hash",
                        "description": "If set, the configuration will be exported without the default site hash key."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Optional you can add the path to export",
                        "execution": "drupal config:export  \\\n  --directory=\"path\/to\/export\""
                    },
                    {
                        "description": "If export will be in a compressed file and\/or if uuid and config hashes will be removed.",
                        "execution": "drupal config:export  \\\n  --directory=\"path\/to\/export\" \\\n  --tar \\\n  --remove-uuid \\\n  --remove-config-hash\n"
                    }
                ],
                "aliases": [
                    "ce"
                ],
                "key": "config.export",
                "dashed": "config-export",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "config:export:content:type",
                "description": "Exportar um tipo de conte\u00fado espec\u00edfico e os seus campos.",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "optional-config": {
                        "name": "optional-config",
                        "description": "Exportar tipo de conte\u00fado como um arquivo de configura\u00e7\u00e3o YAML opcional em seu m\u00f3dulo."
                    }
                },
                "arguments": {
                    "content-type": {
                        "name": "content-type",
                        "description": "Content Type to be exported"
                    }
                },
                "examples": [
                    {
                        "description": "Provide a content type  and module name",
                        "execution": "drupal config:export:content:type page \\\n  --module=\"demo\""
                    },
                    {
                        "description": "If you want export content type provide the optional config",
                        "execution": "drupal config:export:content:type page \\\n  --module=\"demo\" \\\n  --optional-config \n"
                    }
                ],
                "aliases": [
                    "cect"
                ],
                "key": "config.export.content.type",
                "dashed": "config-export-content-type",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "config:export:single",
                "description": "Exportar configura\u00e7\u00e3o como um arquivo yml.",
                "options": {
                    "name": {
                        "name": "name",
                        "description": "commands.config.export.single.options.name"
                    },
                    "directory": {
                        "name": "directory",
                        "description": "commands.config.export.arguments.directory"
                    },
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "include-dependencies": {
                        "name": "include-dependencies",
                        "description": "Export dependencies of the configuration as well."
                    },
                    "optional": {
                        "name": "optional",
                        "description": "Export config as an optional YAML configuration in your module"
                    },
                    "remove-uuid": {
                        "name": "remove-uuid",
                        "description": "If set, the configuration will be exported without uuid key."
                    },
                    "remove-config-hash": {
                        "name": "remove-config-hash",
                        "description": "If set, the configuration will be exported without the default site hash key."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Provide config settings name to be exported",
                        "execution": "drupal config:export:single \\\n  --name=config.settings.name"
                    },
                    {
                        "description": "if uuid and\/or config hashes will be removed.",
                        "execution": "drupal config:export:single \\\n  --name=config.settings.name \\\n  --remove-uuid \\\n  --remove-config-hash\n"
                    }
                ],
                "aliases": [
                    "ces"
                ],
                "key": "config.export.single",
                "dashed": "config-export-single",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "config:export:view",
                "description": "Exportar uma view no formato YAML dentro de um m\u00f3dulo fornecido para reutiliza\u00e7\u00e3o em outro site.",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "optional-config": {
                        "name": "optional-config",
                        "description": "Exportar view como uma configura\u00e7\u00e3o YAML opcional em seu m\u00f3dulo"
                    },
                    "include-module-dependencies": {
                        "name": "include-module-dependencies",
                        "description": "Inclua depend\u00eancias do m\u00f3dulo em um arquivo YAML"
                    }
                },
                "arguments": {
                    "view-id": {
                        "name": "view-id",
                        "description": "View ID"
                    }
                },
                "examples": [
                    {
                        "description": "Provide a view id",
                        "execution": "drupal config:export:view viewid"
                    },
                    {
                        "description": "You can provide the interactive values like parameter.",
                        "execution": "drupal config:export:view viewid \\\n  --module=\"modulename\" \\\n  --optional-config \\\n  --include-module-dependencies\n"
                    }
                ],
                "aliases": [
                    "cev"
                ],
                "key": "config.export.view",
                "dashed": "config-export-view",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "config:import",
                "description": "Importar configura\u00e7\u00e3o do estado atual da aplica\u00e7\u00e3o.",
                "options": {
                    "file": {
                        "name": "file",
                        "description": "Path to an archive file of configuration to import."
                    },
                    "directory": {
                        "name": "directory",
                        "description": "Path to a directory of configuration to import."
                    },
                    "remove-files": {
                        "name": "remove-files",
                        "description": "Remove files after synchronization."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Provide a configuration file",
                        "execution": "drupal config:import \\\n  --file=\/path\/to\/config\/file"
                    },
                    {
                        "description": "Provide a configuration directory",
                        "execution": "drupal config:import  \\\n  --directory=\/path\/to\/config\/dir\n"
                    }
                ],
                "aliases": [
                    "ci"
                ],
                "key": "config.import",
                "dashed": "config-import",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "config:import:single",
                "description": "Importar a configurati\u00e7\u00e3o selecionada.",
                "options": {
                    "file": {
                        "name": "file",
                        "description": "The file(s) name or file(s) absolute path to import"
                    },
                    "directory": {
                        "name": "directory",
                        "description": "commands.config.import.arguments.directory"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Providing a file option using full path.",
                        "execution": "drupal config:import:single \\\n  --file=\"\/path\/to\/file\/block.block.default_block.yml\""
                    },
                    {
                        "description": "Providing file and directory options",
                        "execution": "drupal config:import:single  \\\n  --file=\"block.block.default_block.yml\" \\\n  --directory=\"\/path\/to\/directory\"\n"
                    }
                ],
                "aliases": [
                    "cis"
                ],
                "key": "config.import.single",
                "dashed": "config-import-single",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "config:override",
                "description": "Sobrescrever valor de configura\u00e7\u00e3o ativa.",
                "options": [],
                "arguments": {
                    "name": {
                        "name": "name",
                        "description": "Configuration name"
                    },
                    "key": {
                        "name": "key",
                        "description": "Chave"
                    },
                    "value": {
                        "name": "value",
                        "description": "Valor"
                    }
                },
                "examples": [
                    {
                        "description": "D\u00e9finir la valeur de \"flood\" du module Contact \u00e0 10.",
                        "execution": "drupal config:override contact.settings flood.limit 10"
                    }
                ],
                "aliases": [
                    "co"
                ],
                "key": "config.override",
                "dashed": "config-override",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "config:validate",
                "description": "Validate a drupal config against its schema",
                "options": [],
                "arguments": {
                    "name": {
                        "name": "name",
                        "description": ""
                    }
                },
                "examples": [
                    {
                        "description": "Provide the configuration name.",
                        "execution": "drupal config:validate configuration.name"
                    }
                ],
                "aliases": [
                    "cv"
                ],
                "key": "config.validate",
                "dashed": "config-validate",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "create": [
            {
                "name": "create:comments",
                "description": "Criar coment\u00e1rios dummy para sua aplica\u00e7\u00e3o Drupal 8.",
                "options": {
                    "limit": {
                        "name": "limit",
                        "description": "Quantos coment\u00e1rios voc\u00ea gostaria de criar."
                    },
                    "title-words": {
                        "name": "title-words",
                        "description": "N\u00famero m\u00e1ximo de palavras em um t\u00edtulo de coment\u00e1rio."
                    },
                    "time-range": {
                        "name": "time-range",
                        "description": "Qu\u00e3o longe no tempo devem ser as datas dos coment\u00e1rios."
                    }
                },
                "arguments": {
                    "node-id": {
                        "name": "node-id",
                        "description": "Node ID onde os coment\u00e1rios ser\u00e3o criados"
                    }
                },
                "examples": [
                    {
                        "description": "Provide the node id where the comments will be generated.",
                        "execution": "drupal create:comments  node-id"
                    },
                    {
                        "description": "Provide number of comments to generate, max title words and time range.",
                        "execution": "drupal create:comments  node-id \\\n  --limit=\"2\" \\\n  --title-words=\"5\" \\\n  --time-range=\"1\"\n"
                    }
                ],
                "aliases": [
                    "crc"
                ],
                "key": "create.comments",
                "dashed": "create-comments",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "create:nodes",
                "description": "Create dummy nodes for your Drupal 8 application.",
                "options": {
                    "limit": {
                        "name": "limit",
                        "description": "How many nodes would you like to create"
                    },
                    "title-words": {
                        "name": "title-words",
                        "description": "Maximum number of words in node titles"
                    },
                    "time-range": {
                        "name": "time-range",
                        "description": "How far back in time should the nodes be dated"
                    },
                    "language": {
                        "name": "language",
                        "description": "commands.create.nodes.options.language"
                    }
                },
                "arguments": {
                    "content-types": {
                        "name": "content-types",
                        "description": "Content type(s) to be used in node creation"
                    }
                },
                "examples": [
                    {
                        "description": "Provide the content type name.",
                        "execution": "drupal create:nodes content-name"
                    },
                    {
                        "description": "Provide the limit of publications, limit of title words, time range and language.",
                        "execution": "drupal create:nodes content-name \\\n  --limit=\"5\" \\\n  --title-words=\"5\" \\\n  --time-range=\"1\" \\\n  --language=\"und\"\n"
                    }
                ],
                "aliases": [
                    "crn"
                ],
                "key": "create.nodes",
                "dashed": "create-nodes",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "create:terms",
                "description": "Create dummy terms for your Drupal 8 application.",
                "options": {
                    "limit": {
                        "name": "limit",
                        "description": "How many terms would you like to create"
                    },
                    "name-words": {
                        "name": "name-words",
                        "description": "Maximum number of words in term names"
                    }
                },
                "arguments": {
                    "vocabularies": {
                        "name": "vocabularies",
                        "description": "Vocabularie(s) to be used in terms creation"
                    }
                },
                "examples": [
                    {
                        "description": "Provide the vocabulary term name.",
                        "execution": "drupal create:terms vocabulary"
                    },
                    {
                        "description": "Provide the limit of terms to add and limit of title words.",
                        "execution": "drupal create:terms tags \\\n  --limit=\"10\" \\\n  --name-words=\"5\"\n"
                    }
                ],
                "aliases": [
                    "crt"
                ],
                "key": "create.terms",
                "dashed": "create-terms",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "create:users",
                "description": "Create dummy users for your Drupal 8 application.",
                "options": {
                    "limit": {
                        "name": "limit",
                        "description": "How many users would you like to create"
                    },
                    "password": {
                        "name": "password",
                        "description": "Password to be set to users created"
                    },
                    "time-range": {
                        "name": "time-range",
                        "description": "How far back in time should the users be dated"
                    }
                },
                "arguments": {
                    "roles": {
                        "name": "roles",
                        "description": "Role(s) to be used in user creation"
                    }
                },
                "examples": [
                    {
                        "description": "Provide the user role.",
                        "execution": "drupal create:users role"
                    },
                    {
                        "description": "Provide the number of users to create, password and time range to create.",
                        "execution": "drupal create:users role \\\n  --limit=\"5\" \\\n  --password=\"usersnewpassword\" \\\n  --time-range=\"1\"\n"
                    }
                ],
                "aliases": [
                    "cru"
                ],
                "key": "create.users",
                "dashed": "create-users",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "create:vocabularies",
                "description": "Create dummy vocabularies for your Drupal 8 application.",
                "options": {
                    "limit": {
                        "name": "limit",
                        "description": "How many vocabularies would you like to create"
                    },
                    "name-words": {
                        "name": "name-words",
                        "description": "Maximum number of words in vocabulary names"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Provide the number of vocabularies to create and maximum number of words in vocabulary names",
                        "execution": "drupal create:vocabularies \\\n  --limit=\"5\" \\\n  --name-words=\"5\"\n"
                    }
                ],
                "aliases": [
                    "crv"
                ],
                "key": "create.vocabularies",
                "dashed": "create-vocabularies",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "cron": [
            {
                "name": "cron:execute",
                "description": "Executar cron de um m\u00f3dulo espec\u00edfico ou todos para executar todas as implementa\u00e7\u00f5es",
                "options": [],
                "arguments": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    }
                },
                "examples": [
                    {
                        "description": "Execute the cron globally",
                        "execution": "drupal cron:execute\n"
                    },
                    {
                        "description": "Execute the cron on the specified module",
                        "execution": "drupal cron:execute \\\n  <module>\n"
                    }
                ],
                "aliases": [
                    "croe",
                    "cre"
                ],
                "key": "cron.execute",
                "dashed": "cron-execute",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "cron:release",
                "description": "Desbloquear cron para voltar a executar",
                "options": [],
                "arguments": [],
                "examples": [
                    {
                        "description": "Execute the cron globally",
                        "execution": "drupal cron:execute\n"
                    }
                ],
                "aliases": [
                    "cror",
                    "crr"
                ],
                "key": "cron.release",
                "dashed": "cron-release",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "database": [
            {
                "name": "database:add",
                "description": "Add a database to settings.php",
                "options": {
                    "database": {
                        "name": "database",
                        "description": "The database name"
                    },
                    "username": {
                        "name": "username",
                        "description": "The database username"
                    },
                    "password": {
                        "name": "password",
                        "description": "The database password"
                    },
                    "prefix": {
                        "name": "prefix",
                        "description": "The database prefix"
                    },
                    "host": {
                        "name": "host",
                        "description": "The database host address"
                    },
                    "port": {
                        "name": "port",
                        "description": "The database host port"
                    },
                    "driver": {
                        "name": "driver",
                        "description": "The database driver"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Add a database to the settings.php",
                        "execution": "drupal database:add \\\n  --database=DATABASE \\\n  --username=USERNAME \\\n  --password=PASSWORD\n"
                    }
                ],
                "aliases": [
                    "dba"
                ],
                "key": "database.add",
                "dashed": "database-add",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "database:client",
                "description": "Iniciar um cliente de banco de dados se ele est\u00e1 dispon\u00edvel",
                "options": [],
                "arguments": {
                    "database": {
                        "name": "database",
                        "description": "Senha do banco de dados em settings.php"
                    }
                },
                "examples": [
                    {
                        "description": "Launch the default client or could launch another regarding the specification on the argument",
                        "execution": "drupal database:client <database>\n"
                    }
                ],
                "aliases": [
                    "dbc"
                ],
                "key": "database.client",
                "dashed": "database-client",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "database:connect",
                "description": "Iniciar um cliente de banco de dados se ele est\u00e1 dispon\u00edvel",
                "options": [],
                "arguments": {
                    "database": {
                        "name": "database",
                        "description": "Senha do banco de dados em settings.php"
                    }
                },
                "examples": [
                    {
                        "description": "Connects to an specified database, or the default if not arguments passed",
                        "execution": "drupal database:connect \\\n  <database>\n"
                    }
                ],
                "aliases": [
                    "dbco"
                ],
                "key": "database.connect",
                "dashed": "database-connect",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "database:drop",
                "description": "Drop all tables in a given database.",
                "options": [],
                "arguments": {
                    "database": {
                        "name": "database",
                        "description": "Database key from settings.php"
                    }
                },
                "examples": [
                    {
                        "description": "Drop the tables on the database specified on the argument",
                        "execution": "drupal database:drop \\\n  <database>\n"
                    }
                ],
                "aliases": [
                    "dbd"
                ],
                "key": "database.drop",
                "dashed": "database-drop",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "database:dump",
                "description": "Dump da estrutura e conte\u00fados da base de dados e tabelas MySQL",
                "options": {
                    "file": {
                        "name": "file",
                        "description": " O nome do arquivo de backup do banco de dados"
                    },
                    "gz": {
                        "name": "gz",
                        "description": "Pass this option if you want the sql result file gzipped"
                    }
                },
                "arguments": {
                    "database": {
                        "name": "database",
                        "description": "Senha da base de dados em settings.php"
                    }
                },
                "examples": [
                    {
                        "description": "Dump default database or the one specified on the argument",
                        "execution": "drupal database:dump \\\n  <database>"
                    },
                    {
                        "description": "Dump in gz compressed format",
                        "execution": "drupal database:dump \\\n  --gz"
                    }
                ],
                "aliases": [
                    "dbdu"
                ],
                "key": "database.dump",
                "dashed": "database-dump",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "database:log:clear",
                "description": "Remove eventos da tabela DBLog, filtros dispon\u00edveis",
                "options": {
                    "type": {
                        "name": "type",
                        "description": "Filter events by a specific type"
                    },
                    "severity": {
                        "name": "severity",
                        "description": "Filter events by a specific level of severity"
                    },
                    "user-id": {
                        "name": "user-id",
                        "description": "Filter events by a specific user id"
                    }
                },
                "arguments": {
                    "event-id": {
                        "name": "event-id",
                        "description": "DBLog event ID"
                    }
                },
                "examples": [
                    {
                        "description": "Clear the database log from DBLog table",
                        "execution": "drupal database:log:clear \\\n  <database>"
                    },
                    {
                        "description": "Clear the database log from DBLog table using filters",
                        "execution": "drupal database:log:clear \\\n  <database> \\\n  --type=TYPE \\\n  --severity=SEVERITY"
                    }
                ],
                "aliases": [
                    "dblc"
                ],
                "key": "database.log.clear",
                "dashed": "database-log-clear",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "database:log:poll",
                "description": "Poll the watchdog and print new log entries every x seconds",
                "options": {
                    "type": {
                        "name": "type",
                        "description": "Filter events by a specific type"
                    },
                    "severity": {
                        "name": "severity",
                        "description": "Filter events by a specific level of severity"
                    },
                    "user-id": {
                        "name": "user-id",
                        "description": "Filter events by a specific user id"
                    }
                },
                "arguments": {
                    "duration": {
                        "name": "duration",
                        "description": "Duration in seconds which to sleep between database reads"
                    }
                },
                "examples": [
                    {
                        "description": "Print the log entries on screen every x seconds",
                        "execution": "drupal database:log:poll \\\n  100\n"
                    }
                ],
                "aliases": [
                    "dblp"
                ],
                "key": "database.log.poll",
                "dashed": "database-log-poll",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "database:query",
                "description": "Executes a SQL statement directly as argument",
                "options": {
                    "quick": {
                        "name": "quick",
                        "description": "Do not cache each query result, print each row as it is received"
                    },
                    "debug": {
                        "name": "debug",
                        "description": "Prints debugging information and memory and CPU usage statistics when the program exits"
                    },
                    "html": {
                        "name": "html",
                        "description": "Produce HTML output"
                    },
                    "xml": {
                        "name": "xml",
                        "description": "Produce XML output"
                    },
                    "raw": {
                        "name": "raw",
                        "description": "Special characters are not escaped in the output."
                    },
                    "vertical": {
                        "name": "vertical",
                        "description": "Print query output rows vertically"
                    },
                    "batch": {
                        "name": "batch",
                        "description": "Print results using tab as the column separator, with each row on a new line. With this option, mysql does not use the history file"
                    }
                },
                "arguments": {
                    "query": {
                        "name": "query",
                        "description": "The SQL statement to execute"
                    },
                    "database": {
                        "name": "database",
                        "description": "Database key from settings.php"
                    }
                },
                "examples": [
                    {
                        "description": "Send a database query",
                        "execution": "drupal database:query 'select * from node limit 0,1'\n"
                    }
                ],
                "aliases": [
                    "dbq"
                ],
                "key": "database.query",
                "dashed": "database-query",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "database:restore",
                "description": "Restaurar a estrutura e conte\u00fado das bases de dados e tabelas do MySQL",
                "options": {
                    "file": {
                        "name": "file",
                        "description": "O nome do arquivo de backup do banco de dados"
                    }
                },
                "arguments": {
                    "database": {
                        "name": "database",
                        "description": "Senha do banco de dados em settings.php"
                    }
                },
                "examples": [
                    {
                        "description": "Restore the database file dump to the database default or another one specified",
                        "execution": "drupal database:restore \\\n  --file='\/srv\/dump\/db.sql'\n"
                    }
                ],
                "aliases": [
                    "dbr"
                ],
                "key": "database.restore",
                "dashed": "database-restore",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "debug": [
            {
                "name": "debug:breakpoints",
                "description": "Exibe breakpoints dispon\u00edveis na aplica\u00e7\u00e3o",
                "options": [],
                "arguments": {
                    "group": {
                        "name": "group",
                        "description": "Digite o Breakpoint Group Name"
                    }
                },
                "examples": [
                    {
                        "description": "Provide a group name.",
                        "execution": "drupal breakpoints:debug bartik"
                    }
                ],
                "aliases": [
                    "dbre"
                ],
                "key": "debug.breakpoints",
                "dashed": "debug-breakpoints",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:cache:context",
                "description": "Displays current cache context for the application.",
                "options": [],
                "arguments": [],
                "examples": [
                    {
                        "description": "Displays cache context",
                        "execution": "drupal debug:cache:context\n"
                    }
                ],
                "aliases": [
                    "dcc"
                ],
                "key": "debug.cache.context",
                "dashed": "debug-cache-context",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:chain",
                "description": "List available chain files.",
                "options": [],
                "arguments": [],
                "examples": [],
                "aliases": [
                    "dch"
                ],
                "key": "debug.chain",
                "dashed": "debug-chain",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:config",
                "description": "Exibe a configura\u00e7\u00e3o atual.",
                "options": [],
                "arguments": {
                    "name": {
                        "name": "name",
                        "description": "Nome da configura\u00e7\u00e3o."
                    }
                },
                "examples": [
                    {
                        "description": "List all configuration object names.",
                        "execution": "drupal config:debug"
                    },
                    {
                        "description": "Display system site configurations values.",
                        "execution": "drupal config:debug system.site"
                    },
                    {
                        "description": "List all system configuration names.",
                        "execution": "drupal config:debug | grep system"
                    }
                ],
                "aliases": [
                    "dc"
                ],
                "key": "debug.config",
                "dashed": "debug-config",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:config:settings",
                "description": "Displays current key:value on settings file.",
                "options": [],
                "arguments": [],
                "examples": [
                    {
                        "description": "Displays key:value as per the settings file",
                        "execution": "drupal debug:config:settings\n"
                    }
                ],
                "aliases": [
                    "dcs"
                ],
                "key": "debug.config.settings",
                "dashed": "debug-config-settings",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:config:validate",
                "description": "Validate a schema implementation before a module is installed.",
                "options": {
                    "schema-name": {
                        "name": "schema-name",
                        "description": ""
                    }
                },
                "arguments": {
                    "filepath": {
                        "name": "filepath",
                        "description": ""
                    },
                    "schema-filepath": {
                        "name": "schema-filepath",
                        "description": ""
                    }
                },
                "examples": [
                    {
                        "description": "",
                        "execution": "drupal debug:config:validate \\\n  \/path\/to\/file \\\n  \/path\/to\/schema-filepath\n"
                    }
                ],
                "aliases": [
                    "dcv"
                ],
                "key": "debug.config.validate",
                "dashed": "debug-config-validate",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:container",
                "description": "Exibe servi\u00e7os atuais para um aplicativo.",
                "options": {
                    "parameters": {
                        "name": "parameters",
                        "description": "Service name."
                    }
                },
                "arguments": {
                    "service": {
                        "name": "service",
                        "description": "Service name."
                    },
                    "method": {
                        "name": "method",
                        "description": "Method name."
                    },
                    "arguments": {
                        "name": "arguments",
                        "description": "Array of Arguments in CSV or JSON format."
                    }
                },
                "examples": [
                    {
                        "description": "Displays the views.views_data_helper services",
                        "execution": "drupal debug:container views.views_data_helper\n"
                    }
                ],
                "aliases": [
                    "dco"
                ],
                "key": "debug.container",
                "dashed": "debug-container",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:cron",
                "description": "Lista de m\u00f3dulos quem implementam uma chamada no cron",
                "options": [],
                "arguments": [],
                "examples": [
                    {
                        "description": "This will show a list with modules implementing the cron hook",
                        "execution": "drupal debug:cron\n"
                    }
                ],
                "aliases": [
                    "dcr"
                ],
                "key": "debug.cron",
                "dashed": "debug-cron",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:database:log",
                "description": "Exibir eventos de log atuais do aplicativo",
                "options": {
                    "type": {
                        "name": "type",
                        "description": "Filter events by a specific type"
                    },
                    "severity": {
                        "name": "severity",
                        "description": "Filter events by a specific level of severity"
                    },
                    "user-id": {
                        "name": "user-id",
                        "description": "Filter events by a specific user id"
                    },
                    "asc": {
                        "name": "asc",
                        "description": "List events in ascending order"
                    },
                    "limit": {
                        "name": "limit",
                        "description": "Limite os resultados a um n\u00famero espec\u00edfico"
                    },
                    "offset": {
                        "name": "offset",
                        "description": "Ponto de partida de um limite"
                    },
                    "yml": {
                        "name": "yml",
                        "description": "Print in a yml style"
                    }
                },
                "arguments": {
                    "event-id": {
                        "name": "event-id",
                        "description": "DBLog evento ID"
                    }
                },
                "examples": [
                    {
                        "description": "List all the entries on the log",
                        "execution": "drupal debug:database:log"
                    },
                    {
                        "description": "List specific log entry by Event ID",
                        "execution": "drupal debug:database:log 21228\n"
                    }
                ],
                "aliases": [
                    "dbb"
                ],
                "key": "debug.database.log",
                "dashed": "debug-database-log",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:database:table",
                "description": "Show all tables in a given database.",
                "options": {
                    "database": {
                        "name": "database",
                        "description": "Database key from settings.php"
                    }
                },
                "arguments": {
                    "table": {
                        "name": "table",
                        "description": "Table to debug"
                    }
                },
                "examples": [
                    {
                        "description": "Show all tables on a database",
                        "execution": "drupal debug:database:table"
                    },
                    {
                        "description": "Show fields on the node table or another specified on the argument",
                        "execution": "drupal debug:database:table node\n"
                    }
                ],
                "aliases": [
                    "ddt"
                ],
                "key": "debug.database.table",
                "dashed": "debug-database-table",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:entity",
                "description": "Debug entities available in the system",
                "options": [],
                "arguments": {
                    "entity-type": {
                        "name": "entity-type",
                        "description": "commands.debug.entity.arguments.entity-type"
                    }
                },
                "examples": [
                    {
                        "description": "Displays the available entities",
                        "execution": "drupal debug:entity\n"
                    }
                ],
                "aliases": [
                    "de"
                ],
                "key": "debug.entity",
                "dashed": "debug-entity",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:event",
                "description": "Display current events ",
                "options": [],
                "arguments": {
                    "event": {
                        "name": "event",
                        "description": "Event to debug"
                    }
                },
                "examples": [
                    {
                        "description": "List all the events that could be debugged",
                        "execution": "drupal debug:evet"
                    },
                    {
                        "description": "Show the information for the kernel.request event",
                        "execution": "drupal debug:event kernel.request"
                    }
                ],
                "aliases": [
                    "dev"
                ],
                "key": "debug.event",
                "dashed": "debug-event",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:features",
                "description": "List registered features.",
                "options": [],
                "arguments": {
                    "bundle": {
                        "name": "bundle",
                        "description": "Bundle name"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "debug.features",
                "dashed": "debug-features",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:image:styles",
                "description": "List image styles on the site",
                "options": [],
                "arguments": [],
                "examples": [
                    {
                        "description": "List all images styles on the site",
                        "execution": "drupal debug:image:styles\n"
                    }
                ],
                "aliases": [
                    "dis"
                ],
                "key": "debug.image.styles",
                "dashed": "debug-image-styles",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:libraries",
                "description": "Displays libraries available in application",
                "options": [],
                "arguments": {
                    "group": {
                        "name": "group",
                        "description": "Enter Libraries Name"
                    }
                },
                "examples": [
                    {
                        "description": "List all available libraries",
                        "execution": "drupal debug:libraries\n"
                    },
                    {
                        "description": "List block library information",
                        "execution": "drupal debug:libraries block\n"
                    }
                ],
                "aliases": [
                    "dl"
                ],
                "key": "debug.libraries",
                "dashed": "debug-libraries",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:migrate",
                "description": "Display current migration available for the application",
                "options": [],
                "arguments": {
                    "tag": {
                        "name": "tag",
                        "description": "Migrate tag"
                    }
                },
                "examples": [
                    {
                        "description": "Displays current migration",
                        "execution": "drupal debug:migrate\n"
                    }
                ],
                "aliases": [
                    "mid"
                ],
                "key": "debug.migrate",
                "dashed": "debug-migrate",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:module",
                "description": "Display current modules available for application",
                "options": {
                    "status": {
                        "name": "status",
                        "description": "Module status [enabled|disabled]"
                    },
                    "type": {
                        "name": "type",
                        "description": "Module type [core|no-core]"
                    }
                },
                "arguments": {
                    "module": {
                        "name": "module",
                        "description": "Module name"
                    }
                },
                "examples": [
                    {
                        "description": "Display all installed modules",
                        "execution": "drupal mod --status=installed"
                    },
                    {
                        "description": "Display all installed and no core modules",
                        "execution": "drupal mod --status=installed --type=no-core"
                    }
                ],
                "aliases": [
                    "dm"
                ],
                "key": "debug.module",
                "dashed": "debug-module",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:multisite",
                "description": "Listar todos os multi-sites dispon\u00edveis no sistema",
                "options": [],
                "arguments": [],
                "examples": [
                    {
                        "description": "Displays multisite information",
                        "execution": "drupal debug:multisite\n"
                    }
                ],
                "aliases": [
                    "dmu"
                ],
                "key": "debug.multisite",
                "dashed": "debug-multisite",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:permission",
                "description": "Displays all user permissions.",
                "options": [],
                "arguments": {
                    "role": {
                        "name": "role",
                        "description": "User role"
                    }
                },
                "examples": [
                    {
                        "description": "Displays all the permissions availables on the site",
                        "execution": "drupal debug:permission\n"
                    }
                ],
                "aliases": [
                    "dp"
                ],
                "key": "debug.permission",
                "dashed": "debug-permission",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:plugin",
                "description": "Mostra todos os tipos de plugins, inst\u00e2ncias de um tipo espec\u00edfico de plugin ou a defini\u00e7\u00e3o para um plugin espec\u00edfico.",
                "options": [],
                "arguments": {
                    "type": {
                        "name": "type",
                        "description": "Tipo de plugin"
                    },
                    "id": {
                        "name": "id",
                        "description": "Plugin ID"
                    }
                },
                "examples": [
                    {
                        "description": "Displays a list with all the plugins on the current site",
                        "execution": "drupal debug:plugin"
                    },
                    {
                        "description": "Displays block plugin information",
                        "execution": "drupal debug:plugin block"
                    },
                    {
                        "description": "Displays block broken information",
                        "execution": "drupal debug:plugin block broken\n"
                    }
                ],
                "aliases": [
                    "dpl"
                ],
                "key": "debug.plugin",
                "dashed": "debug-plugin",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:queue",
                "description": "Display the queues of your application",
                "options": [],
                "arguments": [],
                "examples": [
                    {
                        "description": "Displays the queues of the application",
                        "execution": "drupal debug:queue\n"
                    }
                ],
                "aliases": [
                    "dq"
                ],
                "key": "debug.queue",
                "dashed": "debug-queue",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:rest",
                "description": "Exibir o recurso REST atual para a aplica\u00e7\u00e3o",
                "options": {
                    "authorization": {
                        "name": "authorization",
                        "description": "Recurso REST habilitado | desabilitado"
                    }
                },
                "arguments": {
                    "resource-id": {
                        "name": "resource-id",
                        "description": "REST ID"
                    }
                },
                "examples": [
                    {
                        "description": "Displays rest hooks",
                        "execution": "drupal debug:rest\n"
                    }
                ],
                "aliases": [
                    "rede"
                ],
                "key": "debug.rest",
                "dashed": "debug-rest",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:router",
                "description": "Exibe as rotas atuais de uma aplica\u00e7\u00e3o",
                "options": [],
                "arguments": {
                    "route-name": {
                        "name": "route-name",
                        "description": "Nomes das rotas"
                    }
                },
                "examples": [
                    {
                        "description": "Displays current routes for the application",
                        "execution": "drupal rod"
                    },
                    {
                        "description": "Displays details for the route user.page (\/user)",
                        "execution": "drupal rod user.page"
                    }
                ],
                "aliases": [
                    "dr"
                ],
                "key": "debug.router",
                "dashed": "debug-router",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:settings",
                "description": "Lista configura\u00e7\u00f5es do Drupal Console do usu\u00e1rio",
                "options": [],
                "arguments": [],
                "examples": [
                    {
                        "description": "",
                        "execution": "drupal debug:settings\n"
                    }
                ],
                "aliases": [
                    "dse"
                ],
                "key": "debug.settings",
                "dashed": "debug-settings",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:site",
                "description": "Listar todos os sites locais e remotos.",
                "options": [],
                "arguments": {
                    "target": {
                        "name": "target",
                        "description": "Target"
                    },
                    "property": {
                        "name": "property",
                        "description": "Property"
                    }
                },
                "examples": [
                    {
                        "description": "",
                        "execution": "drupal debug:site\n"
                    }
                ],
                "aliases": [
                    "dsi"
                ],
                "key": "debug.site",
                "dashed": "debug-site",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:state",
                "description": "Exibir as chaves atuais de Estado.",
                "options": [],
                "arguments": {
                    "key": {
                        "name": "key",
                        "description": "Debug para a chave de Estado."
                    }
                },
                "examples": [
                    {
                        "description": "List of the states on the site",
                        "execution": "drupal debug:state\n"
                    },
                    {
                        "description": "Displays a detail of the state install_task tok from the list of states",
                        "execution": "drupal debug:state install_task\n"
                    }
                ],
                "aliases": [
                    "dst"
                ],
                "key": "debug.state",
                "dashed": "debug-state",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:test",
                "description": "Listar testes unit\u00e1rios dispon\u00edveis para a aplica\u00e7\u00e3o.",
                "options": {
                    "test-class": {
                        "name": "test-class",
                        "description": "Classe do teste"
                    }
                },
                "arguments": {
                    "group": {
                        "name": "group",
                        "description": "Grupo"
                    }
                },
                "examples": [
                    {
                        "description": "",
                        "execution": "drupal debug:test\n"
                    }
                ],
                "aliases": [
                    "td"
                ],
                "key": "debug.test",
                "dashed": "debug-test",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:theme",
                "description": "Exibir informa\u00e7\u00f5es sobre os temas da aplica\u00e7\u00e3o",
                "options": [],
                "arguments": {
                    "theme": {
                        "name": "theme",
                        "description": "Defina o tema para carregar maiores informa\u00e7\u00f5es "
                    }
                },
                "examples": [
                    {
                        "description": "List of themes on the site",
                        "execution": "drupal debug:theme"
                    },
                    {
                        "description": "Bartik theme information",
                        "execution": "drupal debug:theme bartik"
                    }
                ],
                "aliases": [
                    "dt"
                ],
                "key": "debug.theme",
                "dashed": "debug-theme",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:update",
                "description": "Exibir atualiza\u00e7\u00f5es necess\u00e1rios para a aplica\u00e7\u00e3o",
                "options": [],
                "arguments": [],
                "examples": [
                    {
                        "description": "List of pending updates",
                        "execution": "drupal debug:update\n"
                    }
                ],
                "aliases": [
                    "du"
                ],
                "key": "debug.update",
                "dashed": "debug-update",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:user",
                "description": "Exibe informa\u00e7\u00f5es dos usu\u00e1rios da aplica\u00e7\u00e3o",
                "options": {
                    "uid": {
                        "name": "uid",
                        "description": "Filters the result list by uids [between quotes separated by spaces]"
                    },
                    "username": {
                        "name": "username",
                        "description": "Filters the result list by usernames [between quotes separated by spaces]"
                    },
                    "mail": {
                        "name": "mail",
                        "description": "Filters the result list by user's e-mail [between quotes separated by spaces]"
                    },
                    "roles": {
                        "name": "roles",
                        "description": "Filtrar por pap\u00e9is"
                    },
                    "limit": {
                        "name": "limit",
                        "description": "Limitar quantidade de usu\u00e1rios a serem carregados"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Users list on the site",
                        "execution": "drupal debug:user\n"
                    }
                ],
                "aliases": [
                    "dus"
                ],
                "key": "debug.user",
                "dashed": "debug-user",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:views",
                "description": "Exibir informa\u00e7\u00f5es sobre a View atual",
                "options": {
                    "tag": {
                        "name": "tag",
                        "description": "Tag da View"
                    },
                    "status": {
                        "name": "status",
                        "description": "Status da View (Habilitado|Desabilitado)"
                    }
                },
                "arguments": {
                    "view-id": {
                        "name": "view-id",
                        "description": "ID da View"
                    }
                },
                "examples": [
                    {
                        "description": "List of views on the site",
                        "execution": "drupal debug:views\n"
                    }
                ],
                "aliases": [
                    "vde"
                ],
                "key": "debug.views",
                "dashed": "debug-views",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "debug:views:plugins",
                "description": "Mostrar os plugins de views atuais para a aplica\u00e7\u00e3o",
                "options": [],
                "arguments": {
                    "type": {
                        "name": "type",
                        "description": "Filtrar plugins de views por tipo"
                    }
                },
                "examples": [
                    {
                        "description": "List of views plugins",
                        "execution": "drupal debug:views:plugins\n"
                    }
                ],
                "aliases": [
                    "dvp"
                ],
                "key": "debug.views.plugins",
                "dashed": "debug-views-plugins",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "devel": [
            {
                "name": "devel:dumper",
                "description": "commands.devel.dumper.messages.change-devel-dumper-plugin",
                "options": [],
                "arguments": {
                    "dumper": {
                        "name": "dumper",
                        "description": "Name of the devel dumper plugin"
                    }
                },
                "examples": [],
                "aliases": [
                    "dd"
                ],
                "key": "devel.dumper",
                "dashed": "devel-dumper",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "develop": [
            {
                "name": "develop:cheatsheet",
                "description": "Update cheatsheet",
                "options": {
                    "directory": {
                        "name": "directory",
                        "description": "directory"
                    },
                    "help": {
                        "name": "help",
                        "description": "Display this help message"
                    },
                    "quiet": {
                        "name": "quiet",
                        "description": "Do not output any message"
                    },
                    "verbose": {
                        "name": "verbose",
                        "description": "Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug"
                    },
                    "version": {
                        "name": "version",
                        "description": "Display this application version"
                    },
                    "ansi": {
                        "name": "ansi",
                        "description": "Force ANSI output"
                    },
                    "no-ansi": {
                        "name": "no-ansi",
                        "description": "Disable ANSI output"
                    },
                    "no-interaction": {
                        "name": "no-interaction",
                        "description": "Do not ask any interactive question"
                    },
                    "env": {
                        "name": "env",
                        "description": "Nombre del ambiente."
                    },
                    "root": {
                        "name": "root",
                        "description": "Define la ra\u00edz de Drupal que se utilizar\u00e1 en la ejecuci\u00f3n de los comandos"
                    },
                    "debug": {
                        "name": "debug",
                        "description": "application.options.debug"
                    },
                    "learning": {
                        "name": "learning",
                        "description": "Generar c\u00f3digo con explicaciones."
                    },
                    "generate-chain": {
                        "name": "generate-chain",
                        "description": "Imprimir opciones y argumentos como YAML para ser usado el comando chain"
                    },
                    "generate-inline": {
                        "name": "generate-inline",
                        "description": "Imprimir opciones y argumentos de ejecuci\u00f3n como llamada inline para ser usados en el futuro"
                    },
                    "generate-doc": {
                        "name": "generate-doc",
                        "description": "Muestra las opciones del comando y sus argumentos como markdown"
                    },
                    "target": {
                        "name": "target",
                        "description": "Nombre del sitio con el que desea interactuar (sitio remoto o local)"
                    },
                    "uri": {
                        "name": "uri",
                        "description": "URI del sitio en Drupal que se usar\u00e1 (para ambientes en multi-site o cuando esta usando un puerto alternativo)"
                    },
                    "yes": {
                        "name": "yes",
                        "description": "Saltar confirmaci\u00f3n y ejecutar directamente"
                    }
                },
                "arguments": {
                    "command": {
                        "name": "command",
                        "description": "The command to execute"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "develop.cheatsheet",
                "dashed": "develop-cheatsheet",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:contribute",
                "description": "Download Drupal + Drupal Console to contribute.",
                "options": {
                    "repository": {
                        "name": "repository",
                        "description": "repository"
                    },
                    "drupal": {
                        "name": "drupal",
                        "description": "drupal"
                    },
                    "code": {
                        "name": "code",
                        "description": "code"
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "develop.contribute",
                "dashed": "develop-contribute",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:create:symlinks",
                "description": "commands.develop.create.symlinks.description",
                "options": {
                    "code-directory": {
                        "name": "code-directory",
                        "description": "commands.develop.create.symlinks.options.code-directory"
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "develop.create.symlinks",
                "dashed": "develop-create-symlinks",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:doc:cheatsheet",
                "description": "commands.develop.doc.cheatsheet.description",
                "options": {
                    "path": {
                        "name": "path",
                        "description": "commands.develop.doc.cheatsheet.options.path"
                    },
                    "wkhtmltopdf": {
                        "name": "wkhtmltopdf",
                        "description": "commands.develop.doc.cheatsheet.options.wkhtmltopdf"
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [
                    "gdc"
                ],
                "key": "develop.doc.cheatsheet",
                "dashed": "develop-doc-cheatsheet",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:doc:dash",
                "description": "commands.develop.doc.dash.description",
                "options": {
                    "path": {
                        "name": "path",
                        "description": "commands.develop.doc.dash.options.path"
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [
                    "gdd"
                ],
                "key": "develop.doc.dash",
                "dashed": "develop-doc-dash",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:doc:data",
                "description": "commands.develop.doc.data.description",
                "options": {
                    "file": {
                        "name": "file",
                        "description": "commands.develop.doc.data.options.file"
                    },
                    "help": {
                        "name": "help",
                        "description": "Display this help message"
                    },
                    "quiet": {
                        "name": "quiet",
                        "description": "Do not output any message"
                    },
                    "verbose": {
                        "name": "verbose",
                        "description": "Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug"
                    },
                    "version": {
                        "name": "version",
                        "description": "Display this application version"
                    },
                    "ansi": {
                        "name": "ansi",
                        "description": "Force ANSI output"
                    },
                    "no-ansi": {
                        "name": "no-ansi",
                        "description": "Disable ANSI output"
                    },
                    "no-interaction": {
                        "name": "no-interaction",
                        "description": "Do not ask any interactive question"
                    },
                    "env": {
                        "name": "env",
                        "description": "Nombre del ambiente."
                    },
                    "root": {
                        "name": "root",
                        "description": "Define la ra\u00edz de Drupal que se utilizar\u00e1 en la ejecuci\u00f3n de los comandos"
                    },
                    "debug": {
                        "name": "debug",
                        "description": "application.options.debug"
                    },
                    "learning": {
                        "name": "learning",
                        "description": "Generar c\u00f3digo con explicaciones."
                    },
                    "generate-chain": {
                        "name": "generate-chain",
                        "description": "Imprimir opciones y argumentos como YAML para ser usado el comando chain"
                    },
                    "generate-inline": {
                        "name": "generate-inline",
                        "description": "Imprimir opciones y argumentos de ejecuci\u00f3n como llamada inline para ser usados en el futuro"
                    },
                    "generate-doc": {
                        "name": "generate-doc",
                        "description": "Muestra las opciones del comando y sus argumentos como markdown"
                    },
                    "target": {
                        "name": "target",
                        "description": "Nombre del sitio con el que desea interactuar (sitio remoto o local)"
                    },
                    "uri": {
                        "name": "uri",
                        "description": "URI del sitio en Drupal que se usar\u00e1 (para ambientes en multi-site o cuando esta usando un puerto alternativo)"
                    },
                    "yes": {
                        "name": "yes",
                        "description": "Saltar confirmaci\u00f3n y ejecutar directamente"
                    }
                },
                "arguments": {
                    "command": {
                        "name": "command",
                        "description": "The command to execute"
                    }
                },
                "examples": [],
                "aliases": [
                    "gdda"
                ],
                "key": "develop.doc.data",
                "dashed": "develop-doc-data",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:doc:gitbook",
                "description": "commands.develop.doc.gitbook.description",
                "options": {
                    "path": {
                        "name": "path",
                        "description": "commands.develop.doc.gitbook.options.path"
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [
                    "gdg"
                ],
                "key": "develop.doc.gitbook",
                "dashed": "develop-doc-gitbook",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:example",
                "description": null,
                "options": [],
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "develop.example",
                "dashed": "develop-example",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:example:container:aware",
                "description": null,
                "options": [],
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "develop.example.container.aware",
                "dashed": "develop-example-container-aware",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:gitbook",
                "description": "Update gitbook",
                "options": {
                    "directory": {
                        "name": "directory",
                        "description": "directory"
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "develop.gitbook",
                "dashed": "develop-gitbook",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:translation:cleanup",
                "description": "commands.develop.translation.cleanup.description",
                "options": [],
                "arguments": {
                    "language": {
                        "name": "language",
                        "description": "commands.develop.translation.cleanup.arguments.language"
                    },
                    "library": {
                        "name": "library",
                        "description": "commands.develop.translation.cleanup.arguments.library"
                    }
                },
                "examples": [],
                "aliases": [
                    "tc"
                ],
                "key": "develop.translation.cleanup",
                "dashed": "develop-translation-cleanup",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:translation:pending",
                "description": "commands.develop.translation.pending.description",
                "options": {
                    "file": {
                        "name": "file",
                        "description": "commands.develop.translation.pending.options.file"
                    }
                },
                "arguments": {
                    "language": {
                        "name": "language",
                        "description": "commands.develop.translation.pending.arguments.language"
                    },
                    "library": {
                        "name": "library",
                        "description": "commands.develop.translation.pending.arguments.library"
                    }
                },
                "examples": [],
                "aliases": [
                    "tp"
                ],
                "key": "develop.translation.pending",
                "dashed": "develop-translation-pending",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:translation:stats",
                "description": "commands.develop.translation.stats.description",
                "options": {
                    "format": {
                        "name": "format",
                        "description": "commands.develop.translation.stats.options.format"
                    }
                },
                "arguments": {
                    "language": {
                        "name": "language",
                        "description": "commands.develop.translation.stats.arguments.language"
                    },
                    "library": {
                        "name": "library",
                        "description": "commands.develop.translation.stats.arguments.library"
                    }
                },
                "examples": [],
                "aliases": [
                    "ts"
                ],
                "key": "develop.translation.stats",
                "dashed": "develop-translation-stats",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:translation:sync",
                "description": "commands.develop.translation.sync.description",
                "options": {
                    "file": {
                        "name": "file",
                        "description": "commands.develop.translation.stats.options.file"
                    }
                },
                "arguments": {
                    "language": {
                        "name": "language",
                        "description": "commands.develop.translation.sync.arguments.language"
                    },
                    "library": {
                        "name": "library",
                        "description": "commands.develop.translation.sync.arguments.library"
                    }
                },
                "examples": [],
                "aliases": [
                    "tsy"
                ],
                "key": "develop.translation.sync",
                "dashed": "develop-translation-sync",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "develop:update:language",
                "description": "Update Drupal Console Language",
                "options": {
                    "directory": {
                        "name": "directory",
                        "description": "directory"
                    },
                    "message": {
                        "name": "message",
                        "description": "message"
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "develop.update.language",
                "dashed": "develop-update-language",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "dotenv": [
            {
                "name": "dotenv:debug",
                "description": "Debug Dotenv debug values.",
                "options": [],
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "dotenv.debug",
                "dashed": "dotenv-debug",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "dotenv:init",
                "description": "Dotenv initializer.",
                "options": [],
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "dotenv.init",
                "dashed": "dotenv-init",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "entity": [
            {
                "name": "entity:delete",
                "description": "Delete an specific entity",
                "options": [],
                "arguments": {
                    "entity-definition-id": {
                        "name": "entity-definition-id",
                        "description": "Entity definition id"
                    },
                    "entity-id": {
                        "name": "entity-id",
                        "description": "Entity ID to be deleted"
                    }
                },
                "examples": [
                    {
                        "description": "Delete entity type content using node id",
                        "execution": "drupal entity:delete node 1"
                    }
                ],
                "aliases": [
                    "ed"
                ],
                "key": "entity.delete",
                "dashed": "entity-delete",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "extend": [
            {
                "name": "extend:example:one",
                "description": "Drupal Console extend example",
                "options": [],
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "extend.example.one",
                "dashed": "extend-example-one",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "extend:example:two",
                "description": "Drupal Console extend example",
                "options": [],
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "extend.example.two",
                "dashed": "extend-example-two",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "features": [
            {
                "name": "features:import",
                "description": "Import module config.",
                "options": {
                    "bundle": {
                        "name": "bundle",
                        "description": "Bundle name"
                    }
                },
                "arguments": {
                    "packages": {
                        "name": "packages",
                        "description": "Package name"
                    }
                },
                "examples": [],
                "aliases": [
                    "fei"
                ],
                "key": "features.import",
                "dashed": "features-import",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "field": [
            {
                "name": "field:info",
                "description": "View information about fields.",
                "options": {
                    "detailed": {
                        "name": "detailed",
                        "description": "Extended output with machine names and descriptions"
                    },
                    "entity": {
                        "name": "entity",
                        "description": "Restrict to a specific fieldabe entity type, for example: node, comment, taxonomy_term, shortcut, block_content, contact_message"
                    },
                    "bundle": {
                        "name": "bundle",
                        "description": "Restrict to a specific bundle type, for example: article"
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [
                    "fii"
                ],
                "key": "field.info",
                "dashed": "field-info",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "generate": [
            {
                "name": "generate:authentication:provider",
                "description": "Gerar um provedor de autentica\u00e7\u00e3o",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Classe do provedor de autentica\u00e7\u00e3o"
                    },
                    "provider-id": {
                        "name": "provider-id",
                        "description": "ID do Provedor"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate an authentication provider specifying the module, the class and the provider id",
                        "execution": "drupal generate:authentication:provider  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultAuthenticationProvider\"  \\\n  --provider-id=\"default_authentication_provider\"\n"
                    }
                ],
                "aliases": [
                    "gap"
                ],
                "key": "generate.authentication.provider",
                "dashed": "generate-authentication-provider",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:breakpoint",
                "description": "Generate breakpoint",
                "options": {
                    "theme": {
                        "name": "theme",
                        "description": "Theme name"
                    },
                    "breakpoints": {
                        "name": "breakpoints",
                        "description": "Breakpoints"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a breakpoint specifying the theme, a breakpoint name, its label, the media query, its weight and multipliers",
                        "execution": "drupal generate:breakpoint  \\\n  --theme=\"classy\"  \\\n  --breakpoints='\"breakpoint_name\":\"narrow\", \"breakpoint_label\":\"narrow\", \"breakpoint_media_query\":\"all and (min-width: 560px) and (max-width: 850px)\", \"breakpoint_weight\":\"1\", \"breakpoint_multipliers\":\"1x\"'"
                    }
                ],
                "aliases": [
                    "gb"
                ],
                "key": "generate.breakpoint",
                "dashed": "generate-breakpoint",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:cache:context",
                "description": "Generate a cache context",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "cache-context": {
                        "name": "cache-context",
                        "description": "Enter the cache context name"
                    },
                    "class": {
                        "name": "class",
                        "description": "Cache context class name"
                    },
                    "services": {
                        "name": "services",
                        "description": "Carrega servi\u00e7os do container."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate cache for a context specifying the module, the context name and its class",
                        "execution": "drupal generate:cache:context  \\\n  --module=\"modulename\"  \\\n  --cache-context=\"ContextName\"  \\\n  --class=\"DefaultCacheContext\""
                    }
                ],
                "aliases": [
                    "gcc"
                ],
                "key": "generate.cache.context",
                "dashed": "generate-cache-context",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:command",
                "description": "Cria comandos via console.",
                "options": {
                    "extension": {
                        "name": "extension",
                        "description": "The extension name."
                    },
                    "extension-type": {
                        "name": "extension-type",
                        "description": "The extension type."
                    },
                    "class": {
                        "name": "class",
                        "description": "Nome da classe do comando"
                    },
                    "name": {
                        "name": "name",
                        "description": "Nome do comando."
                    },
                    "container-aware": {
                        "name": "container-aware",
                        "description": "Conhece o comando ciente da instala\u00e7\u00e3o do site Drupal quando executado"
                    },
                    "services": {
                        "name": "services",
                        "description": "Carrega servi\u00e7os do container."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a command specifying the extension name and type, its class and the name.",
                        "execution": "drupal generate:command  \\\n  --extension=\"ExtensionName\"  \\\n  --extension-type=\"module\"  \\\n  --class=\"DefaultCommand\"  \\\n  --name=\"CommandName\""
                    }
                ],
                "aliases": [
                    "gco",
                    "gcm"
                ],
                "key": "generate.command",
                "dashed": "generate-command",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:controller",
                "description": "Cria e Registra um controller",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Nome da classe do Controller"
                    },
                    "routes": {
                        "name": "routes",
                        "description": "The routes, must be an array containing [title, method, path]"
                    },
                    "services": {
                        "name": "services",
                        "description": "Carrega servi\u00e7os do container."
                    },
                    "test": {
                        "name": "test",
                        "description": "Criar uma classe de teste"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate controller specifying the module name, the class name and its routes",
                        "execution": "drupal generate:controller  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultController\"  \\\n  --routes='\"title\":\"ControllerMethod\", \"name\":\"modulename.default_controller_hello\", \"method\":\"hello\", \"path\":\"\/modulename\/hello\/{name}\"'  \\\n  --test"
                    }
                ],
                "aliases": [
                    "gcon",
                    "gcn"
                ],
                "key": "generate.controller",
                "dashed": "generate-controller",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:entity:bundle",
                "description": "Gera um novo tipo de conte\u00fado (node \/ entity bundle)",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "bundle-name": {
                        "name": "bundle-name",
                        "description": "O tipo de conte\u00fado's nome de m\u00e1quina"
                    },
                    "bundle-title": {
                        "name": "bundle-title",
                        "description": "O nome amig\u00e1vel do tipo de conte\u00fado"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate bundle entity specifying the module, the bundle name and its title",
                        "execution": "drupal generate:entity:bundle  \\\n  --module=\"modulename\"  \\\n  --bundle-name=\"default\"  \\\n  --bundle-title=\"default\""
                    }
                ],
                "aliases": [
                    "geb"
                ],
                "key": "generate.entity.bundle",
                "dashed": "generate-entity-bundle",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:entity:config",
                "description": "Gerar uma nova entidade de configura\u00e7\u00e3o",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "entity-class": {
                        "name": "entity-class",
                        "description": "Classe da entidade de configura\u00e7\u00e3o"
                    },
                    "entity-name": {
                        "name": "entity-name",
                        "description": "Nome da entidade de configura\u00e7\u00e3o"
                    },
                    "base-path": {
                        "name": "base-path",
                        "description": "The base-path for the config entity routes"
                    },
                    "label": {
                        "name": "label",
                        "description": "O r\u00f3tulo"
                    },
                    "bundle-of": {
                        "name": "bundle-of",
                        "description": "Atua como um bundle de entidades de conte\u00fado"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate config entity specifying the module, the entity class, the entity name, its path and label",
                        "execution": "drupal generate:entity:config  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\""
                    }
                ],
                "aliases": [
                    "gec",
                    "gecg"
                ],
                "key": "generate.entity.config",
                "dashed": "generate-entity-config",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:entity:content",
                "description": "Gerar uma nova entidade de conte\u00fado",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "entity-class": {
                        "name": "entity-class",
                        "description": "Classe da entidade de conte\u00fado"
                    },
                    "entity-name": {
                        "name": "entity-name",
                        "description": "Nome da entidade de conte\u00fado"
                    },
                    "base-path": {
                        "name": "base-path",
                        "description": "The base-path for the content entity routes"
                    },
                    "label": {
                        "name": "label",
                        "description": "O r\u00f3tulo"
                    },
                    "has-bundles": {
                        "name": "has-bundles",
                        "description": "A entidade tem bundles"
                    },
                    "is-translatable": {
                        "name": "is-translatable",
                        "description": "Content entity translatable"
                    },
                    "revisionable": {
                        "name": "revisionable",
                        "description": "commands.generate.entity.content.options.revisionable"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a content entity specifying the module, the entity class, the entity name, its path and label",
                        "execution": "drupal generate:entity:content  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\""
                    },
                    {
                        "description": "Generate a translatable and revisionable content entity specifying the module, the entity class, the entity name, its path and label",
                        "execution": "drupal generate:entity:content  \\\n  --module=\"modulename\"  \\\n  --entity-class=\"DefaultEntity\"  \\\n  --entity-name=\"default_entity\"  \\\n  --base-path=\"\/admin\/structure\"  \\\n  --label=\"Default entity\"  \\\n  --is-translatable  \\\n  --revisionable"
                    }
                ],
                "aliases": [
                    "geco",
                    "gect"
                ],
                "key": "generate.entity.content",
                "dashed": "generate-entity-content",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:event:subscriber",
                "description": "Gerar um assinante do evento",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "name": {
                        "name": "name",
                        "description": "commands.generate.service.options.name"
                    },
                    "class": {
                        "name": "class",
                        "description": "Nome da classe"
                    },
                    "events": {
                        "name": "events",
                        "description": "Carrega eventos do container"
                    },
                    "services": {
                        "name": "services",
                        "description": "Carrega servi\u00e7os do container."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate an event subscriber specifying the module name, its name, the class and the events to subscribe",
                        "execution": "drupal generate:event:subscriber  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultSubscriber\"  \\\n  --events='kernel_request'\n"
                    }
                ],
                "aliases": [
                    "ges"
                ],
                "key": "generate.event.subscriber",
                "dashed": "generate-event-subscriber",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:form",
                "description": "Cria um novo \"%s\"",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "O nome da classe do Formul\u00e1rio"
                    },
                    "form-id": {
                        "name": "form-id",
                        "description": "O id do formul\u00e1rio"
                    },
                    "services": {
                        "name": "services",
                        "description": "Carrega servi\u00e7os do container."
                    },
                    "config-file": {
                        "name": "config-file",
                        "description": "Add a config file"
                    },
                    "inputs": {
                        "name": "inputs",
                        "description": "Cria entradas de formul\u00e1rio."
                    },
                    "path": {
                        "name": "path",
                        "description": "Enter the form path"
                    },
                    "menu-link-gen": {
                        "name": "menu-link-gen",
                        "description": "Generate a menu link"
                    },
                    "menu-link-title": {
                        "name": "menu-link-title",
                        "description": "A title for the menu link"
                    },
                    "menu-parent": {
                        "name": "menu-parent",
                        "description": "Menu parent"
                    },
                    "menu-link-desc": {
                        "name": "menu-link-desc",
                        "description": "A description for the menu link"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate an empty form with config file specifying the module name, the class, a form id and the path",
                        "execution": "drupal generate:form  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultForm\"  \\\n  --form-id=\"default_form\"  \\\n  --config-file  \\\n  --path=\"\/modulename\/form\/default\""
                    },
                    {
                        "description": "Generate a form with 2 fields and a config file specifying the module name, the class, a form id, the inputs and the path",
                        "execution": "drupal generate:form  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultForm\"  \\\n  --form-id=\"default_form\"  \\\n  --config-file  \\\n  --inputs='\"name\":\"inputname\", \"type\":\"text_format\", \"label\":\"InputName\", \"options\":\"\", \"description\":\"Just a text input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --inputs='\"name\":\"email\", \"type\":\"email\", \"label\":\"Email\", \"options\":\"\", \"description\":\"Just an email input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --path=\"\/modulename\/form\/default\""
                    }
                ],
                "aliases": [
                    "gf"
                ],
                "key": "generate.form",
                "dashed": "generate-form",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:form:alter",
                "description": "Gera uma implementa\u00e7\u00e3o de hook_form_alter() ou hook_form_FORM_ID_alter",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "form-id": {
                        "name": "form-id",
                        "description": "Form ID para alterar"
                    },
                    "inputs": {
                        "name": "inputs",
                        "description": "Cria entradas de formul\u00e1rio."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a hook form alter for an empty form specifying the module name",
                        "execution": "drupal generate:form:alter  \\\n  --module=\"modulename\""
                    },
                    {
                        "description": "Generate a hook form alter with 2 fields specifying the module name and the inputs",
                        "execution": "drupal generate:form:alter  \\\n  --module=\"modulename\"  \\\n  --inputs='\"name\":\"inputtext\", \"type\":\"text_format\", \"label\":\"InputText\", \"options\":\"\", \"description\":\"Just an input text\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'  \\\n  --inputs='\"name\":\"email\", \"type\":\"email\", \"label\":\"Email\", \"options\":\"\", \"description\":\"Just an email input\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'"
                    }
                ],
                "aliases": [
                    "gfa"
                ],
                "key": "generate.form.alter",
                "dashed": "generate-form-alter",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:form:config",
                "description": "commands.generate.form.description",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "O nome da classe do Formul\u00e1rio"
                    },
                    "form-id": {
                        "name": "form-id",
                        "description": "O id do formul\u00e1rio"
                    },
                    "services": {
                        "name": "services",
                        "description": "Carrega servi\u00e7os do container."
                    },
                    "config-file": {
                        "name": "config-file",
                        "description": "Add a config file"
                    },
                    "inputs": {
                        "name": "inputs",
                        "description": "Cria entradas de formul\u00e1rio."
                    },
                    "path": {
                        "name": "path",
                        "description": "Enter the form path"
                    },
                    "menu-link-gen": {
                        "name": "menu-link-gen",
                        "description": "Generate a menu link"
                    },
                    "menu-link-title": {
                        "name": "menu-link-title",
                        "description": "A title for the menu link"
                    },
                    "menu-parent": {
                        "name": "menu-parent",
                        "description": "Menu parent"
                    },
                    "menu-link-desc": {
                        "name": "menu-link-desc",
                        "description": "A description for the menu link"
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [
                    "gf",
                    "gfc"
                ],
                "key": "generate.form.config",
                "dashed": "generate-form-config",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:help",
                "description": "Generate an implementation of hook_help()",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "description": {
                        "name": "description",
                        "description": "Descri\u00e7\u00e3o do m\u00f3dulo"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a hook help specifying the module name and the description",
                        "execution": "drupal generate:help  \\\n  --module=\"modulename\"  \\\n  --description=\"My Awesome Module\""
                    }
                ],
                "aliases": [
                    "gh"
                ],
                "key": "generate.help",
                "dashed": "generate-help",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:module",
                "description": "Criar um m\u00f3dulo.",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo"
                    },
                    "machine-name": {
                        "name": "machine-name",
                        "description": "O nome de m\u00e1quina (apenas min\u00fasculas e sublinhado)"
                    },
                    "module-path": {
                        "name": "module-path",
                        "description": "O caminho do m\u00f3dulo"
                    },
                    "description": {
                        "name": "description",
                        "description": "Descri\u00e7\u00e3o do m\u00f3dulo"
                    },
                    "core": {
                        "name": "core",
                        "description": "Vers\u00e3o do core"
                    },
                    "package": {
                        "name": "package",
                        "description": "Pacote do m\u00f3dulo"
                    },
                    "module-file": {
                        "name": "module-file",
                        "description": "Add a .module file"
                    },
                    "features-bundle": {
                        "name": "features-bundle",
                        "description": "Define module as feature using the given Features bundle name"
                    },
                    "composer": {
                        "name": "composer",
                        "description": "Adicionar um arquivo composer.json"
                    },
                    "dependencies": {
                        "name": "dependencies",
                        "description": "Depend\u00eancias do m\u00f3dulo separados por v\u00edrgulas (i.e. context, panels)"
                    },
                    "test": {
                        "name": "test",
                        "description": "Criar uma classe de teste"
                    },
                    "twigtemplate": {
                        "name": "twigtemplate",
                        "description": "Generate theme template"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a module specifying the module name, machine name, the path, its description, drupal core and the package name. In this example the composer file, the unit test and twig template are generated too",
                        "execution": "drupal generate:module  \\\n  --module=\"modulename\"  \\\n  --machine-name=\"modulename\"  \\\n  --module-path=\"\/modules\/custom\"  \\\n  --description=\"My Awesome Module\"  \\\n  --core=\"8.x\"  \\\n  --package=\"Custom\"  \\\n  --module-file  \\\n  --composer  \\\n  --test  \\\n  --twigtemplate"
                    }
                ],
                "aliases": [
                    "gm"
                ],
                "key": "generate.module",
                "dashed": "generate-module",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:module:file",
                "description": "Generate a .module file",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate the .module file specifying the module name",
                        "execution": "drupal generate:module:file  \\\n  --module=\"modulename\""
                    }
                ],
                "aliases": [
                    "gmf"
                ],
                "key": "generate.module.file",
                "dashed": "generate-module-file",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:permissions",
                "description": "commands.generate.permission.description",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "permissions": {
                        "name": "permissions",
                        "description": "Criar permiss\u00f5es."
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [
                    "gp"
                ],
                "key": "generate.permissions",
                "dashed": "generate-permissions",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:block",
                "description": "Criar plugin de bloco.",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Nome da classe do plugin"
                    },
                    "label": {
                        "name": "label",
                        "description": "Label do plugin"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Id do plugin"
                    },
                    "theme-region": {
                        "name": "theme-region",
                        "description": "Regi\u00e3o do tema para renderizar o Bloco"
                    },
                    "inputs": {
                        "name": "inputs",
                        "description": "Cria entradas de formul\u00e1rio."
                    },
                    "services": {
                        "name": "services",
                        "description": "Carrega servi\u00e7os do container."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a plugin block in the header region with an input field specifying the module name, the class, the label, its id, the region and the input",
                        "execution": "drupal generate:plugin:block  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultBlock\"  \\\n  --label=\"Default block\"  \\\n  --plugin-id=\"default_block\"  \\\n  --theme-region=\"header\"  \\\n  --inputs='\"name\":\"inputtext\", \"type\":\"text_format\", \"label\":\"InputText\", \"options\":\"\", \"description\":\"Just an input text\", \"maxlength\":\"\", \"size\":\"\", \"default_value\":\"\", \"weight\":\"0\", \"fieldset\":\"\"'"
                    }
                ],
                "aliases": [
                    "gpb"
                ],
                "key": "generate.plugin.block",
                "dashed": "generate-plugin-block",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:ckeditorbutton",
                "description": "Gerar um Plugin de bot\u00e3o CKEditor.",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Nome da classe do Plugin"
                    },
                    "label": {
                        "name": "label",
                        "description": "Plugin label"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Plugin ID. Observa\u00e7\u00e3o: Corresponde ao name do Plugin CKEditor. \u00c9 o primeiro argumento da fun\u00e7\u00e3o CKEDITOR.plugins.add() no arquivo plugin.js."
                    },
                    "button-name": {
                        "name": "button-name",
                        "description": "Nome do bot\u00e3o. Observa\u00e7\u00e3o: Corresponde ao nome do bot\u00e3o do Plugin CKEditor. \u00c9 o primeiro argumento da fun\u00e7\u00e3o editor.ui.addButton() ou editor.ui.addRichCombo() no arquivo plugin.js."
                    },
                    "button-icon-path": {
                        "name": "button-icon-path",
                        "description": "Path do \u00cdcone do Bot\u00e3o. \u00c9 o caminho do \u00edcone\/imagem do bot\u00e3o."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate CKEditor button specifying the module name, the class, the label, its id, the button name and the icon path",
                        "execution": "drupal generate:plugin:ckeditorbutton  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultCKEditorButton\"  \\\n  --label=\"Default ckeditor button\"  \\\n  --plugin-id=\"default ckeditor button\"  \\\n  --button-name=\"Default ckeditor button\"  \\\n  --button-icon-path=\"modules\/custom\/modulename\/js\/plugins\/default ckeditor button\/images\/icon.png\""
                    }
                ],
                "aliases": [
                    "gpc"
                ],
                "key": "generate.plugin.ckeditorbutton",
                "dashed": "generate-plugin-ckeditorbutton",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:condition",
                "description": "Criar um plugin de condition.",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Nome da classe do plugin"
                    },
                    "label": {
                        "name": "label",
                        "description": "Label do plugin"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Id do plugin"
                    },
                    "context-definition-id": {
                        "name": "context-definition-id",
                        "description": "ID da defini\u00e7\u00e3o de contexto"
                    },
                    "context-definition-label": {
                        "name": "context-definition-label",
                        "description": "Label da defini\u00e7\u00e3o de contexto"
                    },
                    "context-definition-required": {
                        "name": "context-definition-required",
                        "description": "A defini\u00e7\u00e3o de contexto \u00e9 obrigat\u00f3ria (TRUE\/FALSE)"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a plugin condition for a node entity type specifying the module name, the class, the label, its id and the context definition",
                        "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"entity:node\"  \\\n  --context-definition-label=\"node\"  \\\n  --context-definition-required"
                    },
                    {
                        "description": "Generate a plugin condition for language specifying the module name, the class, the label, its id and the context definition",
                        "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"language\"  \\\n  --context-definition-label=\"Language\"  \\\n  --context-definition-required"
                    },
                    {
                        "description": "Generate a plugin condition for role configuration specifying the module name, the class, the label, its id and the context definition",
                        "execution": "drupal generate:plugin:condition  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleCondition\"  \\\n  --label=\"Example condition\"  \\\n  --plugin-id=\"example_condition\"  \\\n  --context-definition-id=\"entity:user_role\"  \\\n  --context-definition-label=\"user_role\"  \\\n  --context-definition-required\n"
                    }
                ],
                "aliases": [
                    "gpco",
                    "gpc"
                ],
                "key": "generate.plugin.condition",
                "dashed": "generate-plugin-condition",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:field",
                "description": "Gera plugins de widgets, fortmato e tipo de campo",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "type-class": {
                        "name": "type-class",
                        "description": "Nome da classe do plugin de tipo de campo"
                    },
                    "type-label": {
                        "name": "type-label",
                        "description": "Label do plugin de tipo de campo"
                    },
                    "type-plugin-id": {
                        "name": "type-plugin-id",
                        "description": "ID do plugin de tipo de campo"
                    },
                    "type-description": {
                        "name": "type-description",
                        "description": "commands.generate.plugin.field.options.type-type-description"
                    },
                    "formatter-class": {
                        "name": "formatter-class",
                        "description": "commands.generate.plugin.field.options.class"
                    },
                    "formatter-label": {
                        "name": "formatter-label",
                        "description": "Label do plugin de formato de campo"
                    },
                    "formatter-plugin-id": {
                        "name": "formatter-plugin-id",
                        "description": "ID do plugin de formato de campo"
                    },
                    "widget-class": {
                        "name": "widget-class",
                        "description": "Nome da classe do plugin de formato de campo"
                    },
                    "widget-label": {
                        "name": "widget-label",
                        "description": "Label do plugin de widget de campo"
                    },
                    "widget-plugin-id": {
                        "name": "widget-plugin-id",
                        "description": "ID do plugin de widget de campo"
                    },
                    "field-type": {
                        "name": "field-type",
                        "description": "Tipo de campo, formato e plugin widget que pode ser usado"
                    },
                    "default-widget": {
                        "name": "default-widget",
                        "description": "Widget de campo padr\u00e3o do plugin tipo de campo"
                    },
                    "default-formatter": {
                        "name": "default-formatter",
                        "description": "Formatador de campo padr\u00e3o do plugin tipo de campo"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate field type, widget and formatter plugins specifying the module name, the type (class, label, plugin id and description), the formatter (class, label, plugin id) and the widget (class, label and plugin id)",
                        "execution": "drupal generate:plugin:field  \\\n  --module=\"modulename\"  \\\n  --type-class=\"ExampleFieldType\"  \\\n  --type-label=\"Example field type\"  \\\n  --type-plugin-id=\"example_field_type\"  \\\n  --type-description=\"My Field Type\"  \\\n  --formatter-class=\"ExampleFormatterType\"  \\\n  --formatter-label=\"Example formatter type\"  \\\n  --formatter-plugin-id=\"example_formatter_type\"  \\\n  --widget-class=\"ExampleWidgetType\"  \\\n  --widget-label=\"Example widget type\"  \\\n  --widget-plugin-id=\"example_widget_type\"  \\\n  --field-type=\"example_field_type\"  \\\n  --default-widget=\"example_widget_type\"  \\\n  --default-formatter=\"example_formatter_type\"\n"
                    }
                ],
                "aliases": [
                    "gpf"
                ],
                "key": "generate.plugin.field",
                "dashed": "generate-plugin-field",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:fieldformatter",
                "description": "Gerar um plugin de formato de campo.",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Nome da classe do plugin"
                    },
                    "label": {
                        "name": "label",
                        "description": "Label do plugin"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Id do plugin"
                    },
                    "field-type": {
                        "name": "field-type",
                        "description": "Tipo de campo que pode ser usado com o plugin"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a a text field formatter plugin specifying the module name, the class, the label its plugin id and the field type",
                        "execution": "drupal generate:plugin:fieldformatter  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldFormatter\"  \\\n  --label=\"Example field formatter\"  \\\n  --plugin-id=\"example_field_formatter\"  \\\n  --field-type=\"text\"\n"
                    }
                ],
                "aliases": [
                    "gpff"
                ],
                "key": "generate.plugin.fieldformatter",
                "dashed": "generate-plugin-fieldformatter",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:fieldtype",
                "description": "Gerar um plugin de tipo de campo",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Nome da classe do plugin"
                    },
                    "label": {
                        "name": "label",
                        "description": "Label do plugin"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Id do plugin"
                    },
                    "description": {
                        "name": "description",
                        "description": "Descri\u00e7\u00e3o do plugin"
                    },
                    "default-widget": {
                        "name": "default-widget",
                        "description": "Widget de campo padr\u00e3o deste plugin"
                    },
                    "default-formatter": {
                        "name": "default-formatter",
                        "description": "Formatador de campo padr\u00e3o deste plugin"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a field type plugin specifying the module name, the class, its label, the plugin id and a description",
                        "execution": "drupal generate:plugin:fieldtype  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldType\"  \\\n  --label=\"Example field type\"  \\\n  --plugin-id=\"example_field_type\"  \\\n  --description=\"My Field Type\""
                    },
                    {
                        "description": "Generate a field type plugin with a default widget and formatter specifying the module name, the class, its label, the plugin id and a description",
                        "execution": "drupal generate:plugin:fieldtype  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldType\"  \\\n  --label=\"Example field type\"  \\\n  --plugin-id=\"example_field_type\"  \\\n  --description=\"My Field Type\"  \\\n  --default-widget=\"DefaultWidget\"  \\\n  --default-formatter=\"DefaultFormatter\"\n"
                    }
                ],
                "aliases": [
                    "gpft"
                ],
                "key": "generate.plugin.fieldtype",
                "dashed": "generate-plugin-fieldtype",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:fieldwidget",
                "description": "Generate field widget plugin.",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Plugin class name"
                    },
                    "label": {
                        "name": "label",
                        "description": "Plugin label"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Plugin id"
                    },
                    "field-type": {
                        "name": "field-type",
                        "description": "Field type the plugin can be used with"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a text type field widget plugin specifying the module name, the class, its label, the plugin id and the field type",
                        "execution": "drupal generate:plugin:fieldwidget  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleFieldWidget\"  \\\n  --label=\"Example field widget\"  \\\n  --plugin-id=\"example_field_widget\"  \\\n  --field-type=\"text\"\n"
                    }
                ],
                "aliases": [
                    "gpfw"
                ],
                "key": "generate.plugin.fieldwidget",
                "dashed": "generate-plugin-fieldwidget",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:imageeffect",
                "description": "Criar plugin de efeito de imagem.",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Nome da classe do plugin"
                    },
                    "label": {
                        "name": "label",
                        "description": "Label do plugin"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Id do plugin"
                    },
                    "description": {
                        "name": "description",
                        "description": "Descri\u00e7\u00e3o do plugin"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a image effect plugin specifying the module name, the class, its label, the plugin id and a description",
                        "execution": "drupal generate:plugin:imageeffect  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultImageEffect\"  \\\n  --label=\"Default image effect\"  \\\n  --plugin-id=\"default_image_effect\"  \\\n  --description=\"My Image Effect\"\n"
                    }
                ],
                "aliases": [
                    "gpie"
                ],
                "key": "generate.plugin.imageeffect",
                "dashed": "generate-plugin-imageeffect",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:imageformatter",
                "description": "Generate image formatter plugin.",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Plugin class name"
                    },
                    "label": {
                        "name": "label",
                        "description": "Plugin label"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Plugin id"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a image formatter plugin specifying the module name, the class, its label and the plugin id",
                        "execution": "drupal generate:plugin:imageformatter  \\\n  --module=\"modulename\"  \\\n  --class=\"ExampleImageFormatter\"  \\\n  --label=\"Example image formatter\"  \\\n  --plugin-id=\"example_image_formatter\"\n"
                    }
                ],
                "aliases": [
                    "gpif"
                ],
                "key": "generate.plugin.imageformatter",
                "dashed": "generate-plugin-imageformatter",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:mail",
                "description": "Generate a plugin mail",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Plugin class name"
                    },
                    "label": {
                        "name": "label",
                        "description": "Plugin label"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Plugin id"
                    },
                    "services": {
                        "name": "services",
                        "description": "Carrega servi\u00e7os do container."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate an email plugin specifying the module name, the class, its label and the plugin id",
                        "execution": "drupal generate:plugin:mail  \\\n  --module=\"modulename\"  \\\n  --class=\"HtmlFormatterMail\"  \\\n  --label=\"Html formatter mail\"  \\\n  --plugin-id=\"html_formatter_mail\"\n"
                    }
                ],
                "aliases": [
                    "gpm"
                ],
                "key": "generate.plugin.mail",
                "dashed": "generate-plugin-mail",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:migrate:process",
                "description": "Generate a migrate process plugin",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Plugin class name"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Plugin id"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a migration plugin process specifying the module name, the class and its id",
                        "execution": "drupal generate:plugin:migrate:process  \\\n  --module=\"modulename\"  \\\n  --class=\"MigrationProcess\"  \\\n  --plugin-id=\"migrationprocess\"\n"
                    }
                ],
                "aliases": [
                    "gpmp"
                ],
                "key": "generate.plugin.migrate.process",
                "dashed": "generate-plugin-migrate-process",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:migrate:source",
                "description": "Generate a migrate source plugin",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Plugin class name"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Plugin id"
                    },
                    "table": {
                        "name": "table",
                        "description": "Table to query"
                    },
                    "alias": {
                        "name": "alias",
                        "description": "Short alias to refer to the table as"
                    },
                    "group-by": {
                        "name": "group-by",
                        "description": "Field to group results by"
                    },
                    "fields": {
                        "name": "fields",
                        "description": "Fields to export"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a migration source plugin specifying the module name, the class, its plugin id, the table and its alias",
                        "execution": "drupal generate:plugin:migrate:source  \\\n  --module=\"modulename\"  \\\n  --class=\"PluginClassName\"  \\\n  --plugin-id=\"plugin_class_name\"  \\\n  --table=\"DefaultTableName\"  \\\n  --alias=\"D\""
                    },
                    {
                        "description": "Generate a migration source plugin for specific fields of the users table specifying the module name, the class, its plugin id, the table, its alias and the fields",
                        "execution": "drupal generate:plugin:migrate:source  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultPluginClass\"  \\\n  --plugin-id=\"default_plugin_class\"  \\\n  --table=\"users\"  \\\n  --alias=\"u\"  \\\n  --fields='\"id\":\"id\", \"description\":\"the user id\"'  \\\n  --fields='\"id\":\"username\", \"description\":\"the username\"'  \\\n  --fields='\"id\":\"password\", \"description\":\"the user password\"'  \\\n  --fields='\"id\":\"email\", \"description\":\"the user email\"'\n"
                    }
                ],
                "aliases": [
                    "gpms"
                ],
                "key": "generate.plugin.migrate.source",
                "dashed": "generate-plugin-migrate-source",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:rest:resource",
                "description": "Generate plugin rest resource",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Plugin Rest Resource class"
                    },
                    "name": {
                        "name": "name",
                        "description": "commands.generate.service.options.name"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Plugin Rest Resource id"
                    },
                    "plugin-label": {
                        "name": "plugin-label",
                        "description": "Plugin Rest Resource Label"
                    },
                    "plugin-url": {
                        "name": "plugin-url",
                        "description": "Plugin Rest Resource URL"
                    },
                    "plugin-states": {
                        "name": "plugin-states",
                        "description": "Plugin Rest Resource States"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a rest resource plugin using GET specifying the module name, the class, the plugin id, its label, the target url and the request type",
                        "execution": "drupal generate:plugin:rest:resource  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultRestResource\"  \\\n  --plugin-id=\"default_rest_resource\"  \\\n  --plugin-label=\"Default rest resource\"  \\\n  --plugin-url=\"http:\/\/rest.resources.example.com\"  \\\n  --plugin-states='GET'\n"
                    }
                ],
                "aliases": [
                    "gprr"
                ],
                "key": "generate.plugin.rest.resource",
                "dashed": "generate-plugin-rest-resource",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:rulesaction",
                "description": "Generate a plugin rule action",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Plugin class name"
                    },
                    "label": {
                        "name": "label",
                        "description": "Plugin label"
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "Plugin id"
                    },
                    "type": {
                        "name": "type",
                        "description": "Action Type (user or node)"
                    },
                    "category": {
                        "name": "category",
                        "description": "Plugin category"
                    },
                    "context": {
                        "name": "context",
                        "description": "Plugin context"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a user rule action plugin specifying the module name, the class, its label, the plugin id, the type, the category and its context",
                        "execution": "drupal generate:plugin:rulesaction  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultAction\"  \\\n  --label=\"Default action\"  \\\n  --plugin-id=\"default_action\"  \\\n  --type=\"user\"  \\\n  --category=\"default_action\"  \\\n  --context=\"default_action\""
                    },
                    {
                        "description": "Generate a node rule action plugin specifying the module name, the class, its label, the plugin id, the type, the category and its context",
                        "execution": "drupal generate:plugin:rulesaction  \\\n  --module=\"modulename\"  \\\n  --class=\"DefaultAction\"  \\\n  --label=\"Default action\"  \\\n  --plugin-id=\"default_action\"  \\\n  --type=\"node\"  \\\n  --category=\"default_action\" \\\n  --context=\"default_action\"\n"
                    }
                ],
                "aliases": [
                    "gpra"
                ],
                "key": "generate.plugin.rulesaction",
                "dashed": "generate-plugin-rulesaction",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:skeleton",
                "description": "Generate an implementation of a skeleton plugin for those plugins Drupal Console do not have a specific generator",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "plugin-id": {
                        "name": "plugin-id",
                        "description": "commands.generate.plugin.options.plugin-id"
                    },
                    "class": {
                        "name": "class",
                        "description": "Nome da classe do plugin"
                    },
                    "services": {
                        "name": "services",
                        "description": "Carrega servi\u00e7os do container."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a plugin skeleton specifying module name, the plugin id and the class",
                        "execution": "drupal generate:plugin:skeleton  \\\n  --module=\"modulename\"  \\\n  --plugin-id=\"link_relation_type\"  \\\n  --class=\"DefaultLinkRelationType\"\n"
                    }
                ],
                "aliases": [
                    "gps"
                ],
                "key": "generate.plugin.skeleton",
                "dashed": "generate-plugin-skeleton",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:type:annotation",
                "description": "Generate a plugin type with annotation discovery",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Plugin type class name"
                    },
                    "machine-name": {
                        "name": "machine-name",
                        "description": "commands.generate.plugin.type.annotation.options.plugin-id"
                    },
                    "label": {
                        "name": "label",
                        "description": "Plugin type label"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a plugin with annotation discovery specifying module name, class name, machine name and label",
                        "execution": "drupal generate:plugin:type:annotation  \\\n  --module=\"modulename\"  \\\n  --class=\"ExamplePlugin\"  \\\n  --machine-name=\"example_plugin\"  \\\n  --label=\"Example plugin\"\n"
                    }
                ],
                "aliases": [
                    "gpta"
                ],
                "key": "generate.plugin.type.annotation",
                "dashed": "generate-plugin-type-annotation",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:type:yaml",
                "description": "Generate a plugin type with Yaml discovery",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Plugin type class name"
                    },
                    "plugin-name": {
                        "name": "plugin-name",
                        "description": "Plugin type machine name"
                    },
                    "plugin-file-name": {
                        "name": "plugin-file-name",
                        "description": "Plugin file name"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a plugin with Yaml discovery specifying module name, class name, plugin name and plugin file name",
                        "execution": "drupal generate:plugin:type:yaml  \\\n  --module=\"modulename\"  \\\n  --class=\"ExamplePlugin\"  \\\n  --plugin-name=\"example_plugin\"  \\\n  --plugin-file-name=\"example.plugin\"\n"
                    }
                ],
                "aliases": [
                    "gpty"
                ],
                "key": "generate.plugin.type.yaml",
                "dashed": "generate-plugin-type-yaml",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:plugin:views:field",
                "description": "Generate a custom plugin view field.",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "class": {
                        "name": "class",
                        "description": "Views plugin field class name"
                    },
                    "title": {
                        "name": "title",
                        "description": "Views plugin field title"
                    },
                    "description": {
                        "name": "description",
                        "description": "Views plugin field description"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a custom view field plugin specifying the module name, the class, a title and its description",
                        "execution": "drupal generate:plugin:views:field  \\\n  --module=\"modulename\"  \\\n  --class=\"CustomViewsField\"  \\\n  --title=\"Custom views field\"  \\\n  --description=\"My awesome custom views field plugin.\"\n"
                    }
                ],
                "aliases": [
                    "gpvf"
                ],
                "key": "generate.plugin.views.field",
                "dashed": "generate-plugin-views-field",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:post:update",
                "description": "commands.generate.post:update.description",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "post-update-name": {
                        "name": "post-update-name",
                        "description": "Post Update Name"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate an implementation of post update hook specifying the module name and the post update name",
                        "execution": "drupal generate:post:update  \\\n  --module=\"modulename\"  \\\n  --post-update-name=\"PostUpdateName\"\n"
                    }
                ],
                "aliases": [
                    "gpu"
                ],
                "key": "generate.post.update",
                "dashed": "generate-post-update",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:profile",
                "description": "Generate a profile.",
                "options": {
                    "profile": {
                        "name": "profile",
                        "description": "The profile name"
                    },
                    "machine-name": {
                        "name": "machine-name",
                        "description": "The machine name (lowercase and underscore only)"
                    },
                    "description": {
                        "name": "description",
                        "description": "Profile description"
                    },
                    "core": {
                        "name": "core",
                        "description": "Core version"
                    },
                    "dependencies": {
                        "name": "dependencies",
                        "description": "Module dependencies separated by commas (i.e. context, panels)"
                    },
                    "themes": {
                        "name": "themes",
                        "description": "commands.generate.profile.options.themes"
                    },
                    "distribution": {
                        "name": "distribution",
                        "description": "The distribution name"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a profile specifying the profile name, the machine name, a description, the core and its module dependencies",
                        "execution": "drupal generate:profile  \\\n  --profile=\"NewProfileName\"  \\\n  --machine-name=\"newprofilename\"  \\\n  --description=\"My Useful Profile\"  \\\n  --core=\"8.x\"  \\\n  --dependencies=\"modulename\"\n"
                    }
                ],
                "aliases": [
                    "gpr"
                ],
                "key": "generate.profile",
                "dashed": "generate-profile",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:routesubscriber",
                "description": "Generate a RouteSubscriber",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "name": {
                        "name": "name",
                        "description": "Service name"
                    },
                    "class": {
                        "name": "class",
                        "description": "Class name"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a route subscriber specifying the module name, the route name and its class",
                        "execution": "drupal generate:routesubscriber  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.route_subscriber\"  \\\n  --class=\"RouteSubscriber\"\n"
                    }
                ],
                "aliases": [
                    "gr"
                ],
                "key": "generate.routesubscriber",
                "dashed": "generate-routesubscriber",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:service",
                "description": "Criar servi\u00e7o",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "name": {
                        "name": "name",
                        "description": "commands.generate.service.options.name"
                    },
                    "class": {
                        "name": "class",
                        "description": "Nome da classe"
                    },
                    "interface": {
                        "name": "interface",
                        "description": "commands.common.service.options.interface"
                    },
                    "interface-name": {
                        "name": "interface-name",
                        "description": "commands.common.service.options.interface-name"
                    },
                    "services": {
                        "name": "services",
                        "description": "Carrega servi\u00e7os do container."
                    },
                    "path-service": {
                        "name": "path-service",
                        "description": "Path"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a services without interface specifying the module name, the service name, the class and its path",
                        "execution": "drupal generate:service  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultService\"  \\\n  --path-service=\"\/modules\/custom\/modulename\/src\/\""
                    },
                    {
                        "description": "Generate a services with interface specifying the module name, the service name, the class, the interface name and its path",
                        "execution": "drupal generate:service  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.default\"  \\\n  --class=\"DefaultService\"  \\\n  --interface  \\\n  --interface-name=\"InterfaceName\"  \\\n  --path-service=\"\/modules\/custom\/modulename\/src\/\"\n"
                    }
                ],
                "aliases": [
                    "gs"
                ],
                "key": "generate.service",
                "dashed": "generate-service",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:theme",
                "description": "Generate a theme.",
                "options": {
                    "theme": {
                        "name": "theme",
                        "description": "commands.generate.theme.options.module"
                    },
                    "machine-name": {
                        "name": "machine-name",
                        "description": "The machine name (lowercase and underscore only)"
                    },
                    "theme-path": {
                        "name": "theme-path",
                        "description": "commands.generate.theme.options.module-path"
                    },
                    "description": {
                        "name": "description",
                        "description": "Theme description"
                    },
                    "core": {
                        "name": "core",
                        "description": "Core version"
                    },
                    "package": {
                        "name": "package",
                        "description": "Theme package"
                    },
                    "global-library": {
                        "name": "global-library",
                        "description": "Global styling library name"
                    },
                    "libraries": {
                        "name": "libraries",
                        "description": "commands.generate.theme.options.libraries"
                    },
                    "base-theme": {
                        "name": "base-theme",
                        "description": "Base theme (i.e. classy, stable)"
                    },
                    "regions": {
                        "name": "regions",
                        "description": "Regions"
                    },
                    "breakpoints": {
                        "name": "breakpoints",
                        "description": "Breakpoints"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a theme without region and without breakpoint specifying the theme name, its machine name, the theme path, a description, the drupal core, the package name and the global library",
                        "execution": "drupal generate:theme  \\\n  --theme=\"AnotherTheme\"  \\\n  --machine-name=\"anothertheme\"  \\\n  --theme-path=\"\/themes\/custom\"  \\\n  --description=\"My Awesome theme\"  \\\n  --core=\"8.x\"  \\\n  --package=\"PackageName\"  \\\n  --global-library=\"global-styling\"  \\\n  --base-theme=\"false\""
                    },
                    {
                        "description": "Generate a theme base on stable theme with two region defined and one breakpoint specifying the theme name, its machine name, the theme path, a description, the drupal core, the package name, a global library, its base, the regions and the breakpoint",
                        "execution": "drupal generate:theme  \\\n  --theme=\"MyTheme\"  \\\n  --machine-name=\"mytheme\"  \\\n  --theme-path=\"\/themes\/custom\"  \\\n  --description=\"My Awesome theme\"  \\\n  --core=\"8.x\"  \\\n  --package=\"MyThemePackage\"  \\\n  --global-library=\"global-styling\"  \\\n  --base-theme=\"stable\"  \\\n  --regions='\"region_name\":\"Content\", \"region_machine_name\":\"content\"'  \\\n  --regions='\"region_name\":\"Panel\", \"region_machine_name\":\"panel\"'  \\\n  --breakpoints='\"breakpoint_name\":\"narrow\", \"breakpoint_label\":\"narrow\", \"breakpoint_media_query\":\"all and (min-width: 560px) and (max-width: 850px)\", \"breakpoint_weight\":\"1\", \"breakpoint_multipliers\":\"1x\"'\n"
                    }
                ],
                "aliases": [
                    "gt"
                ],
                "key": "generate.theme",
                "dashed": "generate-theme",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:twig:extension",
                "description": "Generate a Twig extension.",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "name": {
                        "name": "name",
                        "description": "Twig Extension name"
                    },
                    "class": {
                        "name": "class",
                        "description": "Class name"
                    },
                    "services": {
                        "name": "services",
                        "description": "Carrega servi\u00e7os do container."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate a twig extension specifying the module name, the extension name and its class",
                        "execution": "drupal generate:twig:extension  \\\n  --module=\"modulename\"  \\\n  --name=\"modulename.twig.extension\"  \\\n  --class=\"DefaultTwigExtension\"\n"
                    }
                ],
                "aliases": [
                    "gte"
                ],
                "key": "generate.twig.extension",
                "dashed": "generate-twig-extension",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "generate:update",
                "description": "Generate an implementation of hook_update_N()",
                "options": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "update-n": {
                        "name": "update-n",
                        "description": "Update Number"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Generate an update N hook implementation specifying the module name and the N value",
                        "execution": "drupal generate:update  \\\n  --module=\"modulename\"  \\\n  --update-n=\"8001\"\n"
                    }
                ],
                "aliases": [
                    "gu"
                ],
                "key": "generate.update",
                "dashed": "generate-update",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "image": [
            {
                "name": "image:styles:flush",
                "description": "Execute flush function by image style or execute all flush images styles",
                "options": [],
                "arguments": {
                    "styles": {
                        "name": "styles",
                        "description": "The Images Styles name."
                    }
                },
                "examples": [
                    {
                        "description": "Flush large image style",
                        "execution": "drupal image:styles:flush  large"
                    },
                    {
                        "description": "Flush thumbnail image style",
                        "execution": "drupal image:styles:flush  thumbnail\n"
                    }
                ],
                "aliases": [
                    "isf"
                ],
                "key": "image.styles.flush",
                "dashed": "image-styles-flush",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "locale": [
            {
                "name": "locale:language:add",
                "description": "Add a language to be supported by your site",
                "options": [],
                "arguments": {
                    "language": {
                        "name": "language",
                        "description": "Language for instance es or Spanish"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "locale.language.add",
                "dashed": "locale-language-add",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "locale:language:delete",
                "description": "DElete a language to be supported by your site",
                "options": [],
                "arguments": {
                    "language": {
                        "name": "language",
                        "description": "Language for instance es or Spanish"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "locale.language.delete",
                "dashed": "locale-language-delete",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "locale:translation:status",
                "description": "List available translation updates",
                "options": [],
                "arguments": {
                    "language": {
                        "name": "language",
                        "description": "Language for instance es or Spanish"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "locale.translation.status",
                "dashed": "locale-translation-status",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "migrate": [
            {
                "name": "migrate:execute",
                "description": "Execute a migration available for application",
                "options": {
                    "site-url": {
                        "name": "site-url",
                        "description": "Site Source URL"
                    },
                    "db-type": {
                        "name": "db-type",
                        "description": "commands.migrate.setup.migrations.options.db-type"
                    },
                    "db-host": {
                        "name": "db-host",
                        "description": "Database Host"
                    },
                    "db-name": {
                        "name": "db-name",
                        "description": "Database Name"
                    },
                    "db-user": {
                        "name": "db-user",
                        "description": "Database User"
                    },
                    "db-pass": {
                        "name": "db-pass",
                        "description": "Database Pass"
                    },
                    "db-prefix": {
                        "name": "db-prefix",
                        "description": "Database Prefix"
                    },
                    "db-port": {
                        "name": "db-port",
                        "description": "Database Port"
                    },
                    "exclude": {
                        "name": "exclude",
                        "description": "Migration id(s) to exclude"
                    },
                    "source-base_path": {
                        "name": "source-base_path",
                        "description": "Local file directory containing your source site (e.g. \/var\/www\/docroot), or your site address (for example http:\/\/example.com)"
                    }
                },
                "arguments": {
                    "migration-ids": {
                        "name": "migration-ids",
                        "description": "Migration id(s)"
                    }
                },
                "examples": [],
                "aliases": [
                    "mie"
                ],
                "key": "migrate.execute",
                "dashed": "migrate-execute",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "migrate:rollback",
                "description": "Rollback one or multiple migrations",
                "options": {
                    "source-base_path": {
                        "name": "source-base_path",
                        "description": "commands.migrate.setup.options.source-base-path"
                    }
                },
                "arguments": {
                    "migration-ids": {
                        "name": "migration-ids",
                        "description": "Migration id(s)"
                    }
                },
                "examples": [],
                "aliases": [
                    "mir"
                ],
                "key": "migrate.rollback",
                "dashed": "migrate-rollback",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "migrate:setup",
                "description": "Load and create the relevant migrations for a provided legacy database",
                "options": {
                    "db-type": {
                        "name": "db-type",
                        "description": "Drupal Database type"
                    },
                    "db-host": {
                        "name": "db-host",
                        "description": "Database Host"
                    },
                    "db-name": {
                        "name": "db-name",
                        "description": "Database Name"
                    },
                    "db-user": {
                        "name": "db-user",
                        "description": "Database User"
                    },
                    "db-pass": {
                        "name": "db-pass",
                        "description": "Database Pass"
                    },
                    "db-prefix": {
                        "name": "db-prefix",
                        "description": "Database Prefix"
                    },
                    "db-port": {
                        "name": "db-port",
                        "description": "Database Port"
                    },
                    "source-base_path": {
                        "name": "source-base_path",
                        "description": "commands.migrate.setup.options.source-base-path"
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [
                    "mis"
                ],
                "key": "migrate.setup",
                "dashed": "migrate-setup",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "module": [
            {
                "name": "module:dependency:install",
                "description": "commands.module.install.dependencies.description",
                "options": [],
                "arguments": {
                    "module": {
                        "name": "module",
                        "description": "Module or modules to be enabled should be separated by a space"
                    }
                },
                "examples": [
                    {
                        "description": "Install the dependencies of the specfied module",
                        "execution": "drupal module:dependency:install  modulename\n"
                    }
                ],
                "aliases": [
                    "modi"
                ],
                "key": "module.dependency.install",
                "dashed": "module-dependency-install",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "module:download",
                "description": "Download module or modules in application",
                "options": {
                    "path": {
                        "name": "path",
                        "description": "The path of the contrib project"
                    },
                    "latest": {
                        "name": "latest",
                        "description": "Default to download most recent version"
                    },
                    "composer": {
                        "name": "composer",
                        "description": "Download the module using Composer"
                    },
                    "unstable": {
                        "name": "unstable",
                        "description": "commands.module.install.options.unstable"
                    }
                },
                "arguments": {
                    "module": {
                        "name": "module",
                        "description": "Module or modules to be enabled should be separated by a space"
                    }
                },
                "examples": [
                    {
                        "description": "Download module specifying module name and its path",
                        "execution": "drupal module:download  modulename  \\\n  --path=\"modules\/contrib\"\n"
                    }
                ],
                "aliases": [
                    "mod",
                    "md"
                ],
                "key": "module.download",
                "dashed": "module-download",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "module:install",
                "description": "Instala m\u00f3dulo(s) na aplica\u00e7\u00e3o",
                "options": {
                    "latest": {
                        "name": "latest",
                        "description": "Padr\u00e3o para baixar a vers\u00e3o mais recente"
                    },
                    "composer": {
                        "name": "composer",
                        "description": "Uninstalls the module using Composer"
                    }
                },
                "arguments": {
                    "module": {
                        "name": "module",
                        "description": "M\u00f3dulo(s) a serem instalados dever\u00e3o ser separados por um espa\u00e7o"
                    }
                },
                "examples": [
                    {
                        "description": "Install module specifying the module name",
                        "execution": "drupal module:install  modulename\n"
                    }
                ],
                "aliases": [
                    "moi"
                ],
                "key": "module.install",
                "dashed": "module-install",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "module:path",
                "description": "Returns the relative path to the module (or absolute path)",
                "options": {
                    "absolute": {
                        "name": "absolute",
                        "description": "Return module absolute path"
                    }
                },
                "arguments": {
                    "module": {
                        "name": "module",
                        "description": "The Module name (machine name)"
                    }
                },
                "examples": [
                    {
                        "description": "Get the relative path of the module specifying the module name",
                        "execution": "drupal module:path  modulename\n"
                    }
                ],
                "aliases": [
                    "mop"
                ],
                "key": "module.path",
                "dashed": "module-path",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "module:uninstall",
                "description": "Desinstala m\u00f3dulos ou m\u00f3dulos na aplica\u00e7\u00e3o",
                "options": {
                    "force": {
                        "name": "force",
                        "description": "Quer ignorar as depend\u00eancias desinstalar o m\u00f3dulo for\u00e7adamente?"
                    },
                    "composer": {
                        "name": "composer",
                        "description": "Uninstalls the module using Composer"
                    }
                },
                "arguments": {
                    "module": {
                        "name": "module",
                        "description": "Digite o nome do m\u00f3dulo"
                    }
                },
                "examples": [
                    {
                        "description": "Uninstall the module specifying the module name",
                        "execution": "drupal module:uninstall  modulename\n"
                    }
                ],
                "aliases": [
                    "mou"
                ],
                "key": "module.uninstall",
                "dashed": "module-uninstall",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "module:update",
                "description": "Update core, module or modules in the application",
                "options": {
                    "composer": {
                        "name": "composer",
                        "description": "Update the module using Composer"
                    },
                    "simulate": {
                        "name": "simulate",
                        "description": "Simulate the update process with Composer"
                    }
                },
                "arguments": {
                    "module": {
                        "name": "module",
                        "description": "Module or modules to be updated should be separated by a space. Leave empty for updating the core and all your modules managed by Composer."
                    }
                },
                "examples": [
                    {
                        "description": "Update module specifying module name and composer parameter",
                        "execution": "drupal module:update  modulename  \\\n  --composer\n"
                    }
                ],
                "aliases": [
                    "moup"
                ],
                "key": "module.update",
                "dashed": "module-update",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "multisite": [
            {
                "name": "multisite:new",
                "description": "Sets up the files for a new multisite install.",
                "options": {
                    "copy-default": {
                        "name": "copy-default",
                        "description": "Copies existing site from the default install."
                    }
                },
                "arguments": {
                    "directory": {
                        "name": "directory",
                        "description": "Name of directory under 'sites' which should be created."
                    },
                    "uri": {
                        "name": "uri",
                        "description": "Site URI to add to sites.php."
                    }
                },
                "examples": [
                    {
                        "description": "Set up files for a multisite install specifying destination path and uri",
                        "execution": "drupal multisite:new  vendor\/newsite http:\/\/mysite.example.com\n"
                    }
                ],
                "aliases": [
                    "mun"
                ],
                "key": "multisite.new",
                "dashed": "multisite-new",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "node": [
            {
                "name": "node:access:rebuild",
                "description": "Permiss\u00f5es de acesso ao node reconstru\u00eddas. A reconstru\u00e7\u00e3o ir\u00e1 remover todos os privil\u00e9gios do conte\u00fado e substitu\u00ed-los com permiss\u00f5es baseadas nos m\u00f3dulos e configura\u00e7\u00f5es atuais.",
                "options": {
                    "batch": {
                        "name": "batch",
                        "description": "Processo em modo de lotes."
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Reconstruir permiss\u00f5es de acesso a nodes",
                        "execution": "drupal node:access:rebuild --batch"
                    }
                ],
                "aliases": [
                    "nar"
                ],
                "key": "node.access.rebuild",
                "dashed": "node-access-rebuild",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "queue": [
            {
                "name": "queue:run",
                "description": "Process the selected queue.",
                "options": [],
                "arguments": {
                    "name": {
                        "name": "name",
                        "description": "Queue name."
                    }
                },
                "examples": [],
                "aliases": [
                    "qr"
                ],
                "key": "queue.run",
                "dashed": "queue-run",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "quick": [
            {
                "name": "quick:start",
                "description": "Download, install and serve a new Drupal project",
                "options": {
                    "repository": {
                        "name": "repository",
                        "description": "repository"
                    },
                    "directory": {
                        "name": "directory",
                        "description": "directory"
                    },
                    "profile": {
                        "name": "profile",
                        "description": "profile"
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "quick.start",
                "dashed": "quick-start",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "rest": [
            {
                "name": "rest:disable",
                "description": "Disable a rest resource for the application",
                "options": [],
                "arguments": {
                    "resource-id": {
                        "name": "resource-id",
                        "description": "Rest ID"
                    }
                },
                "examples": [],
                "aliases": [
                    "red",
                    "redi"
                ],
                "key": "rest.disable",
                "dashed": "rest-disable",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "rest:enable",
                "description": "Habilite um recurso REST para a aplica\u00e7\u00e3o",
                "options": [],
                "arguments": {
                    "resource-id": {
                        "name": "resource-id",
                        "description": "Rest ID"
                    }
                },
                "examples": [],
                "aliases": [
                    "ree"
                ],
                "key": "rest.enable",
                "dashed": "rest-enable",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "router": [
            {
                "name": "router:rebuild",
                "description": "Reconstruir rotas de uma aplica\u00e7\u00e3o",
                "options": [],
                "arguments": [],
                "examples": [
                    {
                        "description": "Rebuild routes",
                        "execution": "drupal router:rebuild"
                    }
                ],
                "aliases": [
                    "rr",
                    "ror"
                ],
                "key": "router.rebuild",
                "dashed": "router-rebuild",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "sample": [
            {
                "name": "sample:default",
                "description": "commands.sample.default.description",
                "options": [],
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "sample.default",
                "dashed": "sample-default",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "settings": [
            {
                "name": "settings:set",
                "description": "Change a specific setting value in DrupalConsole config file",
                "options": {
                    "help": {
                        "name": "help",
                        "description": "Display this help message"
                    },
                    "quiet": {
                        "name": "quiet",
                        "description": "Do not output any message"
                    },
                    "verbose": {
                        "name": "verbose",
                        "description": "Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug"
                    },
                    "version": {
                        "name": "version",
                        "description": "Display this application version"
                    },
                    "ansi": {
                        "name": "ansi",
                        "description": "Force ANSI output"
                    },
                    "no-ansi": {
                        "name": "no-ansi",
                        "description": "Disable ANSI output"
                    },
                    "no-interaction": {
                        "name": "no-interaction",
                        "description": "Do not ask any interactive question"
                    },
                    "env": {
                        "name": "env",
                        "description": "Nombre del ambiente."
                    },
                    "root": {
                        "name": "root",
                        "description": "Define la ra\u00edz de Drupal que se utilizar\u00e1 en la ejecuci\u00f3n de los comandos"
                    },
                    "debug": {
                        "name": "debug",
                        "description": "application.options.debug"
                    },
                    "learning": {
                        "name": "learning",
                        "description": "Generar c\u00f3digo con explicaciones."
                    },
                    "generate-chain": {
                        "name": "generate-chain",
                        "description": "Imprimir opciones y argumentos como YAML para ser usado el comando chain"
                    },
                    "generate-inline": {
                        "name": "generate-inline",
                        "description": "Imprimir opciones y argumentos de ejecuci\u00f3n como llamada inline para ser usados en el futuro"
                    },
                    "generate-doc": {
                        "name": "generate-doc",
                        "description": "Muestra las opciones del comando y sus argumentos como markdown"
                    },
                    "target": {
                        "name": "target",
                        "description": "Nombre del sitio con el que desea interactuar (sitio remoto o local)"
                    },
                    "uri": {
                        "name": "uri",
                        "description": "URI del sitio en Drupal que se usar\u00e1 (para ambientes en multi-site o cuando esta usando un puerto alternativo)"
                    },
                    "yes": {
                        "name": "yes",
                        "description": "Saltar confirmaci\u00f3n y ejecutar directamente"
                    }
                },
                "arguments": {
                    "command": {
                        "name": "command",
                        "description": "The command to execute"
                    },
                    "name": {
                        "name": "name",
                        "description": "Setting name in YAML flatten format to set a value in Drupal Console config file"
                    },
                    "value": {
                        "name": "value",
                        "description": "Setting value to set in Drupal Console config file"
                    }
                },
                "examples": [
                    {
                        "description": "Set application language setting value to \"es\"",
                        "execution": "drupal settings:set  application.language es"
                    }
                ],
                "aliases": [],
                "key": "settings.set",
                "dashed": "settings-set",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "site": [
            {
                "name": "site:import:local",
                "description": "Importar\/Configurar um projeto local existente do Drupal",
                "options": {
                    "environment": {
                        "name": "environment",
                        "description": "Nome do ambiente que ser\u00e1 importado"
                    }
                },
                "arguments": {
                    "name": {
                        "name": "name",
                        "description": "Nome que ser\u00e1 usado para gerar a configura\u00e7\u00e3o do site"
                    },
                    "directory": {
                        "name": "directory",
                        "description": "Diret\u00f3rio ra\u00edz do Drupal existente"
                    }
                },
                "examples": [
                    {
                        "description": "Import local drupal project specifying the site name and the path",
                        "execution": "drupal site:import:local  SiteName \/private\/var\/www\/vhost\/anexusit\/drupal8.dev\/web"
                    }
                ],
                "aliases": [
                    "sil"
                ],
                "key": "site.import.local",
                "dashed": "site-import-local",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "site:install",
                "description": "Instalar um projeto Drupal",
                "options": {
                    "langcode": {
                        "name": "langcode",
                        "description": "commands.site.install.options.langcode"
                    },
                    "db-type": {
                        "name": "db-type",
                        "description": "commands.site.install.options.db-type"
                    },
                    "db-file": {
                        "name": "db-file",
                        "description": "commands.site.install.options.db-file"
                    },
                    "db-host": {
                        "name": "db-host",
                        "description": "Database Host"
                    },
                    "db-name": {
                        "name": "db-name",
                        "description": "Database Name"
                    },
                    "db-user": {
                        "name": "db-user",
                        "description": "Database User"
                    },
                    "db-pass": {
                        "name": "db-pass",
                        "description": "Database Pass"
                    },
                    "db-prefix": {
                        "name": "db-prefix",
                        "description": "Database Prefix"
                    },
                    "db-port": {
                        "name": "db-port",
                        "description": "Database Port"
                    },
                    "site-name": {
                        "name": "site-name",
                        "description": "commands.site.install.options.site-name"
                    },
                    "site-mail": {
                        "name": "site-mail",
                        "description": "commands.site.install.options.site-mail"
                    },
                    "account-name": {
                        "name": "account-name",
                        "description": "commands.site.install.options.account-name"
                    },
                    "account-mail": {
                        "name": "account-mail",
                        "description": "commands.site.install.options.account-mail"
                    },
                    "account-pass": {
                        "name": "account-pass",
                        "description": "commands.site.install.options.account-pass"
                    },
                    "force": {
                        "name": "force",
                        "description": "commands.site.install.options.force"
                    }
                },
                "arguments": {
                    "profile": {
                        "name": "profile",
                        "description": "Perfil de instala\u00e7\u00e3o a ser instalado"
                    }
                },
                "examples": [
                    {
                        "description": "Install a drupal project specifying installation type, language code, database configuration, site name, site email and admin credential settings",
                        "execution": "drupal site:install  standard  \\\n  --langcode=\"en\"  \\\n  --db-type=\"mysql\"  \\\n  --db-host=\"127.0.0.1\"  \\\n  --db-name=\"drupal8\"  \\\n  --db-user=\"u53rn4m3\"  \\\n  --db-pass=\"dbp455\"  \\\n  --db-port=\"3306\"  \\\n  --site-name=\"Drupal 8\"  \\\n  --site-mail=\"admin@example.com\"  \\\n  --account-name=\"admin\"  \\\n  --account-mail=\"admin@example.com\"  \\\n  --account-pass=\"p455w0rd\"\n"
                    }
                ],
                "aliases": [
                    "si"
                ],
                "key": "site.install",
                "dashed": "site-install",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "site:maintenance",
                "description": "Habilitar\/Desabilitar modo de manuten\u00e7\u00e3o",
                "options": [],
                "arguments": {
                    "mode": {
                        "name": "mode",
                        "description": "commands.site.maintenance.arguments.mode[on\/off]"
                    }
                },
                "examples": [
                    {
                        "description": "Switch on maintenance",
                        "execution": "drupal site:maintenance  on"
                    },
                    {
                        "description": "Switch off maintenance",
                        "execution": "drupal site:maintenance  off\n"
                    }
                ],
                "aliases": [
                    "sma"
                ],
                "key": "site.maintenance",
                "dashed": "site-maintenance",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "site:mode",
                "description": "Atualizar as configura\u00e7\u00f5es de desempenho do sistema",
                "options": [],
                "arguments": {
                    "environment": {
                        "name": "environment",
                        "description": "Nome do ambiente [dev, prod]"
                    }
                },
                "examples": [
                    {
                        "description": "Switch system to prod",
                        "execution": "drupal site:mode  prod"
                    },
                    {
                        "description": "Switch system to dev",
                        "execution": "drupal site:mode  dev\n"
                    }
                ],
                "aliases": [
                    "smo"
                ],
                "key": "site.mode",
                "dashed": "site-mode",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "site:new",
                "description": "Download a new Drupal project",
                "options": {
                    "repository": {
                        "name": "repository",
                        "description": "repository"
                    },
                    "directory": {
                        "name": "directory",
                        "description": "directory"
                    }
                },
                "arguments": [],
                "examples": [],
                "aliases": [],
                "key": "site.new",
                "dashed": "site-new",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "site:statistics",
                "description": "Exibe as estat\u00edsticas atuais para o website.",
                "options": [],
                "arguments": [],
                "examples": [],
                "aliases": [
                    "sst"
                ],
                "key": "site.statistics",
                "dashed": "site-statistics",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "site:status",
                "description": "Exibir informa\u00e7\u00f5es da atual instala\u00e7\u00e3o do Drupal",
                "options": {
                    "format": {
                        "name": "format",
                        "description": "commands.site.status.options.format"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Get drupal installation status specifying the output format as table",
                        "execution": "drupal site:status  \\\n  --format=\"table\"\n"
                    }
                ],
                "aliases": [
                    "ss"
                ],
                "key": "site.status",
                "dashed": "site-status",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "state": [
            {
                "name": "state:delete",
                "description": "Apagar Estado",
                "options": [],
                "arguments": {
                    "name": {
                        "name": "name",
                        "description": "Nome do estado."
                    }
                },
                "examples": [
                    {
                        "description": "Delete state specifying the state name",
                        "execution": "drupal state:delete  comment.maintain_entity_statistics\n"
                    }
                ],
                "aliases": [
                    "std"
                ],
                "key": "state.delete",
                "dashed": "state-delete",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "state:override",
                "description": "Sobrescrever a chave de Estado.",
                "options": [],
                "arguments": {
                    "key": {
                        "name": "key",
                        "description": "A chave de Estado a ser sobrescrita."
                    },
                    "value": {
                        "name": "value",
                        "description": "O valor do Estado a ser definido."
                    }
                },
                "examples": [
                    {
                        "description": "Override state value specifying the state name and the new value",
                        "execution": "drupal state:override  comment.node_comment_statistics_scale \"!!float 1\"\n"
                    }
                ],
                "aliases": [
                    "sto"
                ],
                "key": "state.override",
                "dashed": "state-override",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "taxonomy": [
            {
                "name": "taxonomy:term:delete",
                "description": "Delete taxonomy terms from a vocabulary",
                "options": [],
                "arguments": {
                    "vid": {
                        "name": "vid",
                        "description": ""
                    }
                },
                "examples": [
                    {
                        "description": "Delete all terms of the \"tags\" vocabulary",
                        "execution": "drupal taxonomy:term:delete  tags\n"
                    }
                ],
                "aliases": [
                    "ttd"
                ],
                "key": "taxonomy.term.delete",
                "dashed": "taxonomy-term-delete",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "test": [
            {
                "name": "test:run",
                "description": "Executar testes unit\u00e1rios dispon\u00edveis para a aplica\u00e7\u00e3o",
                "options": {
                    "url": {
                        "name": "url",
                        "description": "commands.test.run.arguments.url"
                    }
                },
                "arguments": {
                    "test-class": {
                        "name": "test-class",
                        "description": "Classe de teste"
                    },
                    "test-methods": {
                        "name": "test-methods",
                        "description": "M\u00e9todo(s) de teste para ser executado"
                    }
                },
                "examples": [],
                "aliases": [
                    "ter",
                    "tr"
                ],
                "key": "test.run",
                "dashed": "test-run",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "theme": [
            {
                "name": "theme:download",
                "description": "Baixar um tema para a aplica\u00e7\u00e3o",
                "options": {
                    "composer": {
                        "name": "composer",
                        "description": "Use --composer option for manage the theme download with Composer"
                    }
                },
                "arguments": {
                    "theme": {
                        "name": "theme",
                        "description": "the Theme name"
                    },
                    "version": {
                        "name": "version",
                        "description": "Theme version i.e 1.x-dev"
                    }
                },
                "examples": [
                    {
                        "description": "Download theme specifying name and version",
                        "execution": "drupal theme:download  Alina 7.x-1.2\n"
                    }
                ],
                "aliases": [
                    "thd",
                    "td"
                ],
                "key": "theme.download",
                "dashed": "theme-download",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "theme:install",
                "description": "Instalar tema(s) na aplica\u00e7\u00e3o",
                "options": {
                    "set-default": {
                        "name": "set-default",
                        "description": "Definir como tema padr\u00e3o"
                    }
                },
                "arguments": {
                    "theme": {
                        "name": "theme",
                        "description": "commands.theme.install.options.module"
                    }
                },
                "examples": [
                    {
                        "description": "Install theme specifying the name",
                        "execution": "drupal theme:install  mytheme\n"
                    }
                ],
                "aliases": [
                    "thi",
                    "ti"
                ],
                "key": "theme.install",
                "dashed": "theme-install",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "theme:path",
                "description": "Returns the relative path to the theme (or absolute path)",
                "options": {
                    "absolute": {
                        "name": "absolute",
                        "description": "Return theme absolute path"
                    }
                },
                "arguments": {
                    "theme": {
                        "name": "theme",
                        "description": "Theme name"
                    }
                },
                "examples": [
                    {
                        "description": "Get the path of mytheme",
                        "execution": "drupal theme:path  mytheme\n"
                    }
                ],
                "aliases": [
                    "thp"
                ],
                "key": "theme.path",
                "dashed": "theme-path",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "theme:uninstall",
                "description": "Desinstalar tema(s) da aplica\u00e7\u00e3o",
                "options": [],
                "arguments": {
                    "theme": {
                        "name": "theme",
                        "description": "commands.theme.uninstall.options.module"
                    }
                },
                "examples": [
                    {
                        "description": "Uninstall theme specifying the name",
                        "execution": "drupal theme:uninstall  mytheme\n"
                    }
                ],
                "aliases": [
                    "thu",
                    "tu"
                ],
                "key": "theme.uninstall",
                "dashed": "theme-uninstall",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "update": [
            {
                "name": "update:entities",
                "description": "Aplicando atualiza\u00e7\u00e3o de entidades",
                "options": [],
                "arguments": [],
                "examples": [
                    {
                        "description": "Update entities",
                        "execution": "drupal update:entities\n"
                    }
                ],
                "aliases": [
                    "upe"
                ],
                "key": "update.entities",
                "dashed": "update-entities",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "update:execute",
                "description": "Executar uma fun\u00e7\u00e3o especifica de atualiza\u00e7\u00e3o (Update N) de um m\u00f3dulo especifico, ou executar todas",
                "options": [],
                "arguments": {
                    "module": {
                        "name": "module",
                        "description": "O nome do m\u00f3dulo."
                    },
                    "update-n": {
                        "name": "update-n",
                        "description": "Especificar a fun\u00e7\u00e3o Update N a ser executada"
                    }
                },
                "examples": [
                    {
                        "description": "Update all entities",
                        "execution": "drupal update:execute\n"
                    }
                ],
                "aliases": [
                    "upex",
                    "upe"
                ],
                "key": "update.execute",
                "dashed": "update-execute",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "user": [
            {
                "name": "user:create",
                "description": "Create users for the application",
                "options": {
                    "roles": {
                        "name": "roles",
                        "description": "User roles"
                    },
                    "email": {
                        "name": "email",
                        "description": "User email"
                    },
                    "status": {
                        "name": "status",
                        "description": "User status"
                    }
                },
                "arguments": {
                    "username": {
                        "name": "username",
                        "description": "User name to be created"
                    },
                    "password": {
                        "name": "password",
                        "description": "User password"
                    }
                },
                "examples": [
                    {
                        "description": "Create user specifying username, password, role, email and status",
                        "execution": "drupal user:create  john p455w0rd  \\\n  --roles='authenticated'  \\\n  --email=\"john@anexusit.com\"  \\\n  --status=\"1\""
                    },
                    {
                        "description": "Create admin user specifying username, password, role, email and status",
                        "execution": "drupal user:create  doe p455w0rd  \\\n  --roles='administrator'  \\\n  --email=\"doe@anexusit.com\"  \\\n  --status=\"1\"\n"
                    }
                ],
                "aliases": [
                    "uc"
                ],
                "key": "user.create",
                "dashed": "user-create",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "user:delete",
                "description": "Remover usu\u00e1rios da aplica\u00e7\u00e3o",
                "options": {
                    "user-id": {
                        "name": "user-id",
                        "description": "ID do usu\u00e1rio a ser deletado"
                    },
                    "roles": {
                        "name": "roles",
                        "description": "Pap\u00e9is associados ao usu\u00e1rios que ser\u00e3o deletados"
                    }
                },
                "arguments": [],
                "examples": [
                    {
                        "description": "Delete user specifying the id and the user role",
                        "execution": "drupal user:delete  \\\n  --user-id=\"2\"\n  --roles='authenticated'"
                    },
                    {
                        "description": "Delete user specifying its id",
                        "execution": "drupal user:delete  \\\n  --user-id=\"3\"\n"
                    }
                ],
                "aliases": [
                    "ud"
                ],
                "key": "user.delete",
                "dashed": "user-delete",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "user:login:clear:attempts",
                "description": "Limpar tentativas falhas de login para um usu\u00e1rio.",
                "options": [],
                "arguments": {
                    "uid": {
                        "name": "uid",
                        "description": "ID do usu\u00e1rio."
                    }
                },
                "examples": [],
                "aliases": [
                    "ulca",
                    "uslca"
                ],
                "key": "user.login.clear.attempts",
                "dashed": "user-login-clear-attempts",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "user:login:url",
                "description": "Cria uma URL de login de uso \u00fanico.",
                "options": [],
                "arguments": {
                    "user-id": {
                        "name": "user-id",
                        "description": "ID do usu\u00e1rio."
                    }
                },
                "examples": [
                    {
                        "description": "Get one time login url for user id 1",
                        "execution": "drupal user:login:url  1\n"
                    }
                ],
                "aliases": [
                    "ulu",
                    "uslu"
                ],
                "key": "user.login.url",
                "dashed": "user-login-url",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "user:password:hash",
                "description": "Gerar o hash de uma senha em formato texto.",
                "options": [],
                "arguments": {
                    "password": {
                        "name": "password",
                        "description": "Senha(s) em formato texto"
                    }
                },
                "examples": [
                    {
                        "description": "Get hash of the word \"p455w0rd\"",
                        "execution": "drupal user:password:hash  p455w0rd\n"
                    }
                ],
                "aliases": [
                    "uph",
                    "usph"
                ],
                "key": "user.password.hash",
                "dashed": "user-password-hash",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "user:password:reset",
                "description": "Recuperar senha para um usu\u00e1rio espec\u00edfico.",
                "options": [],
                "arguments": {
                    "user": {
                        "name": "user",
                        "description": "ID do usu\u00e1rio"
                    },
                    "password": {
                        "name": "password",
                        "description": "Senha em formato texto"
                    }
                },
                "examples": [
                    {
                        "description": "Update password specifying the user id and the new password",
                        "execution": "drupal user:password:reset  2 p455w0rd\n"
                    }
                ],
                "aliases": [
                    "upr",
                    "uspr"
                ],
                "key": "user.password.reset",
                "dashed": "user-password-reset",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "user:role",
                "description": "Adds\/removes a role for a given user",
                "options": [],
                "arguments": {
                    "operation": {
                        "name": "operation",
                        "description": "commands.user.role.operation"
                    },
                    "user": {
                        "name": "user",
                        "description": "commands.user.role.user"
                    },
                    "role": {
                        "name": "role",
                        "description": "commands.user.role.role"
                    }
                },
                "examples": [
                    {
                        "description": "Add administrator role to the user admin specifying the username and the role",
                        "execution": "drupal user:role  add admin administrator"
                    },
                    {
                        "description": "Remove administrator role from the user admin specifying the username and the role",
                        "execution": "drupal user:role  remove admin administrator\n"
                    }
                ],
                "aliases": [
                    "ur"
                ],
                "key": "user.role",
                "dashed": "user-role",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "views": [
            {
                "name": "views:disable",
                "description": "Desabilitar uma View",
                "options": [],
                "arguments": {
                    "view-id": {
                        "name": "view-id",
                        "description": "commands.views.debug.arguments.view-id"
                    }
                },
                "examples": [
                    {
                        "description": "Disable content view",
                        "execution": "drupal views:disable  content\n"
                    },
                    {
                        "description": "Disable frontpage view",
                        "execution": "drupal views:disable  frontpage\n"
                    }
                ],
                "aliases": [
                    "vd",
                    "vdi"
                ],
                "key": "views.disable",
                "dashed": "views-disable",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "views:enable",
                "description": "Habilitar uma View",
                "options": [],
                "arguments": {
                    "view-id": {
                        "name": "view-id",
                        "description": "commands.views.debug.arguments.view-id"
                    }
                },
                "examples": [
                    {
                        "description": "Enable content view",
                        "execution": "drupal views:enable  content\n"
                    },
                    {
                        "description": "Enable frontpage view",
                        "execution": "drupal views:enable  frontpage\n"
                    }
                ],
                "aliases": [
                    "ve"
                ],
                "key": "views.enable",
                "dashed": "views-enable",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ],
        "yaml": [
            {
                "name": "yaml:diff",
                "description": "commands.yaml.diff.description",
                "options": {
                    "stats": {
                        "name": "stats",
                        "description": "commands.yaml.diff.options.stats"
                    },
                    "negate": {
                        "name": "negate",
                        "description": "commands.yaml.diff.options.negate"
                    },
                    "limit": {
                        "name": "limit",
                        "description": "commands.yaml.diff.options.limit"
                    },
                    "offset": {
                        "name": "offset",
                        "description": "commands.yaml.diff.options.offset"
                    }
                },
                "arguments": {
                    "yaml-left": {
                        "name": "yaml-left",
                        "description": "commands.yaml.diff.arguments.yaml-left"
                    },
                    "yaml-right": {
                        "name": "yaml-right",
                        "description": "commands.yaml.diff.arguments.yaml-right"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "yaml.diff",
                "dashed": "yaml-diff",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "yaml:get:value",
                "description": "commands.yaml.get.value.description",
                "options": [],
                "arguments": {
                    "yaml-file": {
                        "name": "yaml-file",
                        "description": "commands.yaml.get.value.arguments.yaml-file"
                    },
                    "yaml-key": {
                        "name": "yaml-key",
                        "description": "commands.yaml.get.value.arguments.yaml-key"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "yaml.get.value",
                "dashed": "yaml-get-value",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "yaml:merge",
                "description": "commands.yaml.merge.description",
                "options": [],
                "arguments": {
                    "yaml-destination": {
                        "name": "yaml-destination",
                        "description": "commands.yaml.merge.arguments.yaml-destination"
                    },
                    "yaml-files": {
                        "name": "yaml-files",
                        "description": "commands.yaml.merge.arguments.yaml-files"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "yaml.merge",
                "dashed": "yaml-merge",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "yaml:split",
                "description": "commands.yaml.split.description",
                "options": {
                    "indent-level": {
                        "name": "indent-level",
                        "description": "commands.yaml.split.options.indent-level"
                    },
                    "file-output-prefix": {
                        "name": "file-output-prefix",
                        "description": "commands.yaml.split.options.file-output-prefix"
                    },
                    "file-output-suffix": {
                        "name": "file-output-suffix",
                        "description": "commands.yaml.split.options.file-output-suffix"
                    },
                    "starting-key": {
                        "name": "starting-key",
                        "description": "commands.yaml.split.options.starting-key"
                    },
                    "exclude-parents-key": {
                        "name": "exclude-parents-key",
                        "description": "commands.yaml.split.options.exclude-parents-key"
                    }
                },
                "arguments": {
                    "yaml-file": {
                        "name": "yaml-file",
                        "description": "commands.yaml.split.value.arguments.yaml-file"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "yaml.split",
                "dashed": "yaml-split",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "yaml:unset:key",
                "description": "commands.yaml.unset.key.description",
                "options": [],
                "arguments": {
                    "yaml-file": {
                        "name": "yaml-file",
                        "description": "commands.yaml.unset.value.arguments.yaml-file"
                    },
                    "yaml-key": {
                        "name": "yaml-key",
                        "description": "commands.yaml.unset.value.arguments.yaml-key"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "yaml.unset.key",
                "dashed": "yaml-unset-key",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "yaml:update:key",
                "description": "commands.yaml.update.key.description",
                "options": [],
                "arguments": {
                    "yaml-file": {
                        "name": "yaml-file",
                        "description": "commands.yaml.update.value.arguments.yaml-file"
                    },
                    "yaml-key": {
                        "name": "yaml-key",
                        "description": "commands.yaml.update.value.arguments.yaml-key"
                    },
                    "yaml-new-key": {
                        "name": "yaml-new-key",
                        "description": "commands.yaml.update.value.arguments.yaml-new-key"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "yaml.update.key",
                "dashed": "yaml-update-key",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            },
            {
                "name": "yaml:update:value",
                "description": "commands.yaml.update.value.description",
                "options": [],
                "arguments": {
                    "yaml-file": {
                        "name": "yaml-file",
                        "description": "commands.yaml.update.value.arguments.yaml-file"
                    },
                    "yaml-key": {
                        "name": "yaml-key",
                        "description": "commands.yaml.update.value.arguments.yaml-key"
                    },
                    "yaml-value": {
                        "name": "yaml-value",
                        "description": "commands.yaml.update.value.arguments.yaml-value"
                    }
                },
                "examples": [],
                "aliases": [],
                "key": "yaml.update.value",
                "dashed": "yaml-update-value",
                "messages": {
                    "usage": "Usage",
                    "options": "Available options",
                    "option": "Option",
                    "details": "Details",
                    "arguments": "Available arguments",
                    "argument": "Argument",
                    "examples": "Examples"
                }
            }
        ]
    },
    "application": {
        "namespaces": [
            "misc",
            "cache",
            "config",
            "create",
            "cron",
            "database",
            "debug",
            "devel",
            "develop",
            "dotenv",
            "entity",
            "extend",
            "features",
            "field",
            "generate",
            "image",
            "locale",
            "migrate",
            "module",
            "multisite",
            "node",
            "queue",
            "quick",
            "rest",
            "router",
            "sample",
            "settings",
            "site",
            "state",
            "taxonomy",
            "test",
            "theme",
            "update",
            "user",
            "views",
            "yaml"
        ],
        "options": [
            {
                "name": "help",
                "description": "Display this help message"
            },
            {
                "name": "quiet",
                "description": "Do not output any message"
            },
            {
                "name": "verbose",
                "description": "Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug"
            },
            {
                "name": "version",
                "description": "<info>\"%s\"<\/info> vers\u00e3o <comment>\"%s\"<\/comment>"
            },
            {
                "name": "ansi",
                "description": "Force ANSI output"
            },
            {
                "name": "no-ansi",
                "description": "Disable ANSI output"
            },
            {
                "name": "no-interaction",
                "description": "Do not ask any interactive question"
            },
            {
                "name": "env",
                "description": "Nome do ambiente."
            },
            {
                "name": "root",
                "description": "Define a rais do Drupal que utilizar\u00e1 os comandos em execu\u00e7\u00e3o."
            },
            {
                "name": "debug",
                "description": "application.options.debug"
            },
            {
                "name": "learning",
                "description": "Gerar c\u00f3digo com explica\u00e7\u00f5es."
            },
            {
                "name": "generate-chain",
                "description": "Imprimir op\u00e7\u00f5es e argumentos como YAML para ser usado o comando chain"
            },
            {
                "name": "generate-inline",
                "description": "Imprimir op\u00e7\u00f5es e argumentos de execu\u00e7\u00e3o como chamada inline para ser usado no futuro"
            },
            {
                "name": "generate-doc",
                "description": "Shows command options and arguments as markdown"
            },
            {
                "name": "target",
                "description": "Site name you want to interact with (for local or remote sites)"
            },
            {
                "name": "uri",
                "description": "URI do site Drupal para usar (para ambientes multisites ou quando usado em uma porta alternativa)"
            },
            {
                "name": "yes",
                "description": "Skip confirmation and proceed"
            }
        ],
        "arguments": [
            {
                "name": "command",
                "description": "The command to execute"
            }
        ],
        "languages": {
            "en": "English",
            "es": "Espa\u00f1ol",
            "ca": "Catal\u00e0",
            "fr": "Fran\u00e7ais",
            "ko": "\ud55c\uad6d\uc5b4",
            "hi": "\u0939\u093f\u0928\u094d\u0926\u0940",
            "hu": "Magyar",
            "id": "Bahasa Indonesia",
            "ja": "\u65e5\u672c\u8a9e",
            "mr": "\u092e\u0930\u093e\u0920\u0940",
            "pa": "\u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40",
            "pt-br": "Portugu\u00eas",
            "ro": "Romanian",
            "ru": "p\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a",
            "tl": "Tagalog",
            "vn": "Ti\u1ebfng Vi\u1ec7t",
            "zh-hans": "\u7b80\u4f53\u4e2d\u6587",
            "zh-hant": "\u7e41\u9ad4\u4e2d\u6587"
        },
        "messages": {
            "title": "Available Drupal Console Commands",
            "note": "Note",
            "note_description": "Drupal Console commands *must* be run from the root of a Drupal 8 installation",
            "command": "Drupal Console Command",
            "options": "Available options",
            "option": "Option",
            "details": "Details",
            "arguments": "Available arguments",
            "argument": "Argument",
            "examples": "Examples"
        },
        "examples": []
    }
}